

================================================================
== Vivado HLS Report for 'svm'
================================================================
* Date:           Thu Jul 15 16:35:20 2021

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        hls2-svm
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.232|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  403261|  403261|  403261|  403261|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+--------+--------+----------+-----------+-----------+------+----------+
        |                   |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Sum_Outter_Loop  |  403260|  403260|       330|          -|          -|  1222|    no    |
        | + Sum_Inner_Loop  |     288|     288|        16|          -|          -|    18|    no    |
        +-------------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 58
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / (!exitcond)
	19  / (exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	3  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	2  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %class_hw) nounwind, !map !14"   --->   Operation 59 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([18 x float]* %x) nounwind, !map !18"   --->   Operation 60 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @svm_str) nounwind"   --->   Operation 61 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (1.76ns)   --->   "br label %1" [svm.cpp:27]   --->   Operation 62 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 7.81>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%sum = phi double [ 0.000000e+00, %0 ], [ %sum_1, %5 ]"   --->   Operation 63 'phi' 'sum' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%i = phi i11 [ 0, %0 ], [ %i_1, %5 ]"   --->   Operation 64 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (1.88ns)   --->   "%exitcond1 = icmp eq i11 %i, -826" [svm.cpp:27]   --->   Operation 65 'icmp' 'exitcond1' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.89> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1222, i64 1222, i64 1222) nounwind"   --->   Operation 66 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (1.63ns)   --->   "%i_1 = add i11 %i, 1" [svm.cpp:27]   --->   Operation 67 'add' 'i_1' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %6, label %2" [svm.cpp:27]   --->   Operation 68 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([16 x i8]* @p_str) nounwind" [svm.cpp:28]   --->   Operation 69 'specloopname' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_9 = call i32 (...)* @_ssdm_op_SpecRegionBegin([16 x i8]* @p_str) nounwind" [svm.cpp:28]   --->   Operation 70 'specregionbegin' 'tmp_9' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_1 = zext i11 %i to i64" [svm.cpp:35]   --->   Operation 71 'zext' 'tmp_1' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_14 = call i15 @_ssdm_op_BitConcatenate.i15.i11.i4(i11 %i, i4 0)" [svm.cpp:27]   --->   Operation 72 'bitconcatenate' 'tmp_14' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i15 %tmp_14 to i16" [svm.cpp:27]   --->   Operation 73 'zext' 'p_shl_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_15 = call i12 @_ssdm_op_BitConcatenate.i12.i11.i1(i11 %i, i1 false)" [svm.cpp:27]   --->   Operation 74 'bitconcatenate' 'tmp_15' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i12 %tmp_15 to i16" [svm.cpp:35]   --->   Operation 75 'zext' 'p_shl1_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (1.94ns)   --->   "%tmp_16 = add i16 %p_shl1_cast, %p_shl_cast" [svm.cpp:35]   --->   Operation 76 'add' 'tmp_16' <Predicate = (!exitcond1)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (1.76ns)   --->   "br label %3" [svm.cpp:32]   --->   Operation 77 'br' <Predicate = (!exitcond1)> <Delay = 1.76>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%sum_to_int = bitcast double %sum to i64" [svm.cpp:66]   --->   Operation 78 'bitcast' 'sum_to_int' <Predicate = (exitcond1)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %sum_to_int, i32 52, i32 62)" [svm.cpp:66]   --->   Operation 79 'partselect' 'tmp' <Predicate = (exitcond1)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_10 = trunc i64 %sum_to_int to i52" [svm.cpp:66]   --->   Operation 80 'trunc' 'tmp_10' <Predicate = (exitcond1)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (1.88ns)   --->   "%notlhs = icmp ne i11 %tmp, -1" [svm.cpp:66]   --->   Operation 81 'icmp' 'notlhs' <Predicate = (exitcond1)> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.89> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (2.89ns)   --->   "%notrhs = icmp eq i52 %tmp_10, 0" [svm.cpp:66]   --->   Operation 82 'icmp' 'notrhs' <Predicate = (exitcond1)> <Delay = 2.89> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.89> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node storemerge_cast_cast)   --->   "%tmp_11 = or i1 %notrhs, %notlhs" [svm.cpp:66]   --->   Operation 83 'or' 'tmp_11' <Predicate = (exitcond1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (6.82ns)   --->   "%tmp_12 = fcmp ogt double %sum, 0.000000e+00" [svm.cpp:69]   --->   Operation 84 'dcmp' 'tmp_12' <Predicate = (exitcond1)> <Delay = 6.82> <Core = "DCmp">   --->   Core 114 'DCmp' <Latency = 0> <II = 1> <Delay = 6.82> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node storemerge_cast_cast)   --->   "%tmp_13 = and i1 %tmp_11, %tmp_12" [svm.cpp:69]   --->   Operation 85 'and' 'tmp_13' <Predicate = (exitcond1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (0.99ns) (out node of the LUT)   --->   "%storemerge_cast_cast = select i1 %tmp_13, i16 1, i16 -1" [svm.cpp:69]   --->   Operation 86 'select' 'storemerge_cast_cast' <Predicate = (exitcond1)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i16P(i16* %class_hw, i16 %storemerge_cast_cast) nounwind" [svm.cpp:69]   --->   Operation 87 'write' <Predicate = (exitcond1)> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "ret void" [svm.cpp:71]   --->   Operation 88 'ret' <Predicate = (exitcond1)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.54>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%norm = phi float [ 0.000000e+00, %2 ], [ %norm_1, %4 ]"   --->   Operation 89 'phi' 'norm' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%j = phi i5 [ 0, %2 ], [ %j_1, %4 ]"   --->   Operation 90 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (1.36ns)   --->   "%exitcond = icmp eq i5 %j, -14" [svm.cpp:32]   --->   Operation 91 'icmp' 'exitcond' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.89> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 18, i64 18, i64 18) nounwind"   --->   Operation 92 'speclooptripcount' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (1.78ns)   --->   "%j_1 = add i5 %j, 1" [svm.cpp:32]   --->   Operation 93 'add' 'j_1' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %5, label %4" [svm.cpp:32]   --->   Operation 94 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_s = zext i5 %j to i64" [svm.cpp:35]   --->   Operation 95 'zext' 'tmp_s' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_cast = zext i5 %j to i16" [svm.cpp:35]   --->   Operation 96 'zext' 'tmp_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (2.07ns)   --->   "%tmp_17 = add i16 %tmp_16, %tmp_cast" [svm.cpp:35]   --->   Operation 97 'add' 'tmp_17' <Predicate = (!exitcond)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_17_cast = zext i16 %tmp_17 to i64" [svm.cpp:35]   --->   Operation 98 'zext' 'tmp_17_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%SupVec_addr = getelementptr [21996 x float]* @SupVec, i64 0, i64 %tmp_17_cast" [svm.cpp:35]   --->   Operation 99 'getelementptr' 'SupVec_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%x_addr = getelementptr [18 x float]* %x, i64 0, i64 %tmp_s" [svm.cpp:35]   --->   Operation 100 'getelementptr' 'x_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 101 [2/2] (2.32ns)   --->   "%x_load = load float* %x_addr, align 4" [svm.cpp:35]   --->   Operation 101 'load' 'x_load' <Predicate = (!exitcond)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_3 : Operation 102 [2/2] (3.25ns)   --->   "%SupVec_load = load float* %SupVec_addr, align 4" [svm.cpp:35]   --->   Operation 102 'load' 'SupVec_load' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "%Co_addr = getelementptr inbounds [1222 x float]* @Co, i64 0, i64 %tmp_1" [svm.cpp:66]   --->   Operation 103 'getelementptr' 'Co_addr' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 104 [2/2] (3.25ns)   --->   "%Co_load = load float* %Co_addr, align 4" [svm.cpp:66]   --->   Operation 104 'load' 'Co_load' <Predicate = (exitcond)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_3 : Operation 105 [1/1] (5.54ns)   --->   "%tmp_3 = fpext float %norm to double" [svm.cpp:66]   --->   Operation 105 'fpext' 'tmp_3' <Predicate = (exitcond)> <Delay = 5.54> <Core = "Float2Double">   --->   Core 108 'Float2Double' <Latency = 0> <II = 1> <Delay = 5.54> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 106 [1/2] (2.32ns)   --->   "%x_load = load float* %x_addr, align 4" [svm.cpp:35]   --->   Operation 106 'load' 'x_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_4 : Operation 107 [1/2] (3.25ns)   --->   "%SupVec_load = load float* %SupVec_addr, align 4" [svm.cpp:35]   --->   Operation 107 'load' 'SupVec_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>

State 5 <SV = 4> <Delay = 7.25>
ST_5 : Operation 108 [5/5] (7.25ns)   --->   "%dif = fsub float %x_load, %SupVec_load" [svm.cpp:35]   --->   Operation 108 'fsub' 'dif' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 7.25>
ST_6 : Operation 109 [4/5] (7.25ns)   --->   "%dif = fsub float %x_load, %SupVec_load" [svm.cpp:35]   --->   Operation 109 'fsub' 'dif' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.25>
ST_7 : Operation 110 [3/5] (7.25ns)   --->   "%dif = fsub float %x_load, %SupVec_load" [svm.cpp:35]   --->   Operation 110 'fsub' 'dif' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.25>
ST_8 : Operation 111 [2/5] (7.25ns)   --->   "%dif = fsub float %x_load, %SupVec_load" [svm.cpp:35]   --->   Operation 111 'fsub' 'dif' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.25>
ST_9 : Operation 112 [1/5] (7.25ns)   --->   "%dif = fsub float %x_load, %SupVec_load" [svm.cpp:35]   --->   Operation 112 'fsub' 'dif' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 5.70>
ST_10 : Operation 113 [4/4] (5.70ns)   --->   "%tmp_8 = fmul float %dif, %dif" [svm.cpp:36]   --->   Operation 113 'fmul' 'tmp_8' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 5.70>
ST_11 : Operation 114 [3/4] (5.70ns)   --->   "%tmp_8 = fmul float %dif, %dif" [svm.cpp:36]   --->   Operation 114 'fmul' 'tmp_8' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 5.70>
ST_12 : Operation 115 [2/4] (5.70ns)   --->   "%tmp_8 = fmul float %dif, %dif" [svm.cpp:36]   --->   Operation 115 'fmul' 'tmp_8' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 5.70>
ST_13 : Operation 116 [1/4] (5.70ns)   --->   "%tmp_8 = fmul float %dif, %dif" [svm.cpp:36]   --->   Operation 116 'fmul' 'tmp_8' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 7.25>
ST_14 : Operation 117 [5/5] (7.25ns)   --->   "%norm_1 = fadd float %norm, %tmp_8" [svm.cpp:36]   --->   Operation 117 'fadd' 'norm_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 7.25>
ST_15 : Operation 118 [4/5] (7.25ns)   --->   "%norm_1 = fadd float %norm, %tmp_8" [svm.cpp:36]   --->   Operation 118 'fadd' 'norm_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.25>
ST_16 : Operation 119 [3/5] (7.25ns)   --->   "%norm_1 = fadd float %norm, %tmp_8" [svm.cpp:36]   --->   Operation 119 'fadd' 'norm_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 7.25>
ST_17 : Operation 120 [2/5] (7.25ns)   --->   "%norm_1 = fadd float %norm, %tmp_8" [svm.cpp:36]   --->   Operation 120 'fadd' 'norm_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 7.25>
ST_18 : Operation 121 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str1) nounwind" [svm.cpp:33]   --->   Operation 121 'specloopname' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 122 [1/5] (7.25ns)   --->   "%norm_1 = fadd float %norm, %tmp_8" [svm.cpp:36]   --->   Operation 122 'fadd' 'norm_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 123 [1/1] (0.00ns)   --->   "br label %3" [svm.cpp:32]   --->   Operation 123 'br' <Predicate = true> <Delay = 0.00>

State 19 <SV = 3> <Delay = 7.78>
ST_19 : Operation 124 [1/2] (3.25ns)   --->   "%Co_load = load float* %Co_addr, align 4" [svm.cpp:66]   --->   Operation 124 'load' 'Co_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_19 : Operation 125 [6/6] (7.78ns)   --->   "%tmp_4 = fmul double %tmp_3, -8.000000e+00" [svm.cpp:66]   --->   Operation 125 'dmul' 'tmp_4' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 4> <Delay = 7.78>
ST_20 : Operation 126 [5/6] (7.78ns)   --->   "%tmp_4 = fmul double %tmp_3, -8.000000e+00" [svm.cpp:66]   --->   Operation 126 'dmul' 'tmp_4' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 5> <Delay = 7.78>
ST_21 : Operation 127 [4/6] (7.78ns)   --->   "%tmp_4 = fmul double %tmp_3, -8.000000e+00" [svm.cpp:66]   --->   Operation 127 'dmul' 'tmp_4' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 6> <Delay = 7.78>
ST_22 : Operation 128 [3/6] (7.78ns)   --->   "%tmp_4 = fmul double %tmp_3, -8.000000e+00" [svm.cpp:66]   --->   Operation 128 'dmul' 'tmp_4' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 7> <Delay = 7.78>
ST_23 : Operation 129 [2/6] (7.78ns)   --->   "%tmp_4 = fmul double %tmp_3, -8.000000e+00" [svm.cpp:66]   --->   Operation 129 'dmul' 'tmp_4' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 8> <Delay = 7.78>
ST_24 : Operation 130 [1/6] (7.78ns)   --->   "%tmp_4 = fmul double %tmp_3, -8.000000e+00" [svm.cpp:66]   --->   Operation 130 'dmul' 'tmp_4' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 9> <Delay = 7.32>
ST_25 : Operation 131 [18/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 131 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 26 <SV = 10> <Delay = 7.32>
ST_26 : Operation 132 [17/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 132 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 27 <SV = 11> <Delay = 7.32>
ST_27 : Operation 133 [16/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 133 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 28 <SV = 12> <Delay = 7.32>
ST_28 : Operation 134 [15/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 134 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 29 <SV = 13> <Delay = 7.32>
ST_29 : Operation 135 [14/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 135 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 30 <SV = 14> <Delay = 7.32>
ST_30 : Operation 136 [13/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 136 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 31 <SV = 15> <Delay = 7.32>
ST_31 : Operation 137 [12/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 137 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 32 <SV = 16> <Delay = 7.32>
ST_32 : Operation 138 [11/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 138 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 33 <SV = 17> <Delay = 7.32>
ST_33 : Operation 139 [10/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 139 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 34 <SV = 18> <Delay = 7.32>
ST_34 : Operation 140 [9/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 140 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 35 <SV = 19> <Delay = 7.32>
ST_35 : Operation 141 [8/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 141 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 36 <SV = 20> <Delay = 7.32>
ST_36 : Operation 142 [7/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 142 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 37 <SV = 21> <Delay = 7.32>
ST_37 : Operation 143 [6/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 143 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 38 <SV = 22> <Delay = 7.32>
ST_38 : Operation 144 [5/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 144 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 39 <SV = 23> <Delay = 7.32>
ST_39 : Operation 145 [4/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 145 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 40 <SV = 24> <Delay = 7.32>
ST_40 : Operation 146 [3/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 146 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 41 <SV = 25> <Delay = 7.32>
ST_41 : Operation 147 [2/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 147 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 42 <SV = 26> <Delay = 7.32>
ST_42 : Operation 148 [1/1] (5.54ns)   --->   "%tmp_2 = fpext float %Co_load to double" [svm.cpp:66]   --->   Operation 148 'fpext' 'tmp_2' <Predicate = true> <Delay = 5.54> <Core = "Float2Double">   --->   Core 108 'Float2Double' <Latency = 0> <II = 1> <Delay = 5.54> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_42 : Operation 149 [1/18] (7.32ns)   --->   "%tmp_5 = call double @llvm.exp.f64(double %tmp_4)" [svm.cpp:66]   --->   Operation 149 'dexp' 'tmp_5' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 43 <SV = 27> <Delay = 7.78>
ST_43 : Operation 150 [6/6] (7.78ns)   --->   "%tmp_6 = fmul double %tmp_2, %tmp_5" [svm.cpp:66]   --->   Operation 150 'dmul' 'tmp_6' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 28> <Delay = 7.78>
ST_44 : Operation 151 [5/6] (7.78ns)   --->   "%tmp_6 = fmul double %tmp_2, %tmp_5" [svm.cpp:66]   --->   Operation 151 'dmul' 'tmp_6' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 29> <Delay = 7.78>
ST_45 : Operation 152 [4/6] (7.78ns)   --->   "%tmp_6 = fmul double %tmp_2, %tmp_5" [svm.cpp:66]   --->   Operation 152 'dmul' 'tmp_6' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 30> <Delay = 7.78>
ST_46 : Operation 153 [3/6] (7.78ns)   --->   "%tmp_6 = fmul double %tmp_2, %tmp_5" [svm.cpp:66]   --->   Operation 153 'dmul' 'tmp_6' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 47 <SV = 31> <Delay = 7.78>
ST_47 : Operation 154 [2/6] (7.78ns)   --->   "%tmp_6 = fmul double %tmp_2, %tmp_5" [svm.cpp:66]   --->   Operation 154 'dmul' 'tmp_6' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 32> <Delay = 7.78>
ST_48 : Operation 155 [1/6] (7.78ns)   --->   "%tmp_6 = fmul double %tmp_2, %tmp_5" [svm.cpp:66]   --->   Operation 155 'dmul' 'tmp_6' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 33> <Delay = 8.23>
ST_49 : Operation 156 [5/5] (8.23ns)   --->   "%tmp_7 = fadd double %tmp_6, 0xC0068B43A0000000" [svm.cpp:66]   --->   Operation 156 'dadd' 'tmp_7' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 34> <Delay = 8.23>
ST_50 : Operation 157 [4/5] (8.23ns)   --->   "%tmp_7 = fadd double %tmp_6, 0xC0068B43A0000000" [svm.cpp:66]   --->   Operation 157 'dadd' 'tmp_7' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 35> <Delay = 8.23>
ST_51 : Operation 158 [3/5] (8.23ns)   --->   "%tmp_7 = fadd double %tmp_6, 0xC0068B43A0000000" [svm.cpp:66]   --->   Operation 158 'dadd' 'tmp_7' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 36> <Delay = 8.23>
ST_52 : Operation 159 [2/5] (8.23ns)   --->   "%tmp_7 = fadd double %tmp_6, 0xC0068B43A0000000" [svm.cpp:66]   --->   Operation 159 'dadd' 'tmp_7' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 53 <SV = 37> <Delay = 8.23>
ST_53 : Operation 160 [1/5] (8.23ns)   --->   "%tmp_7 = fadd double %tmp_6, 0xC0068B43A0000000" [svm.cpp:66]   --->   Operation 160 'dadd' 'tmp_7' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 54 <SV = 38> <Delay = 8.23>
ST_54 : Operation 161 [5/5] (8.23ns)   --->   "%sum_1 = fadd double %sum, %tmp_7" [svm.cpp:66]   --->   Operation 161 'dadd' 'sum_1' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 55 <SV = 39> <Delay = 8.23>
ST_55 : Operation 162 [4/5] (8.23ns)   --->   "%sum_1 = fadd double %sum, %tmp_7" [svm.cpp:66]   --->   Operation 162 'dadd' 'sum_1' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 56 <SV = 40> <Delay = 8.23>
ST_56 : Operation 163 [3/5] (8.23ns)   --->   "%sum_1 = fadd double %sum, %tmp_7" [svm.cpp:66]   --->   Operation 163 'dadd' 'sum_1' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 57 <SV = 41> <Delay = 8.23>
ST_57 : Operation 164 [2/5] (8.23ns)   --->   "%sum_1 = fadd double %sum, %tmp_7" [svm.cpp:66]   --->   Operation 164 'dadd' 'sum_1' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 58 <SV = 42> <Delay = 8.23>
ST_58 : Operation 165 [1/5] (8.23ns)   --->   "%sum_1 = fadd double %sum, %tmp_7" [svm.cpp:66]   --->   Operation 165 'dadd' 'sum_1' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 166 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([16 x i8]* @p_str, i32 %tmp_9) nounwind" [svm.cpp:67]   --->   Operation 166 'specregionend' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 167 [1/1] (0.00ns)   --->   "br label %1" [svm.cpp:27]   --->   Operation 167 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('sum') with incoming values : ('sum', svm.cpp:66) [10]  (1.77 ns)

 <State 2>: 7.82ns
The critical path consists of the following:
	'phi' operation ('sum') with incoming values : ('sum', svm.cpp:66) [10]  (0 ns)
	'dcmp' operation ('tmp_12', svm.cpp:69) [66]  (6.82 ns)
	'and' operation ('tmp_13', svm.cpp:69) [67]  (0 ns)
	'select' operation ('storemerge_cast_cast', svm.cpp:69) [68]  (0.993 ns)
	wire write on port 'class_hw' (svm.cpp:69) [69]  (0 ns)

 <State 3>: 5.55ns
The critical path consists of the following:
	'phi' operation ('norm') with incoming values : ('norm', svm.cpp:36) [27]  (0 ns)
	'fpext' operation ('tmp_3', svm.cpp:66) [51]  (5.55 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'load' operation ('SupVec_load', svm.cpp:35) on array 'SupVec' [42]  (3.25 ns)

 <State 5>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif', svm.cpp:35) [43]  (7.26 ns)

 <State 6>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif', svm.cpp:35) [43]  (7.26 ns)

 <State 7>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif', svm.cpp:35) [43]  (7.26 ns)

 <State 8>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif', svm.cpp:35) [43]  (7.26 ns)

 <State 9>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif', svm.cpp:35) [43]  (7.26 ns)

 <State 10>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_8', svm.cpp:36) [44]  (5.7 ns)

 <State 11>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_8', svm.cpp:36) [44]  (5.7 ns)

 <State 12>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_8', svm.cpp:36) [44]  (5.7 ns)

 <State 13>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_8', svm.cpp:36) [44]  (5.7 ns)

 <State 14>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('norm', svm.cpp:36) [45]  (7.26 ns)

 <State 15>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('norm', svm.cpp:36) [45]  (7.26 ns)

 <State 16>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('norm', svm.cpp:36) [45]  (7.26 ns)

 <State 17>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('norm', svm.cpp:36) [45]  (7.26 ns)

 <State 18>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('norm', svm.cpp:36) [45]  (7.26 ns)

 <State 19>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_4', svm.cpp:66) [52]  (7.79 ns)

 <State 20>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_4', svm.cpp:66) [52]  (7.79 ns)

 <State 21>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_4', svm.cpp:66) [52]  (7.79 ns)

 <State 22>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_4', svm.cpp:66) [52]  (7.79 ns)

 <State 23>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_4', svm.cpp:66) [52]  (7.79 ns)

 <State 24>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_4', svm.cpp:66) [52]  (7.79 ns)

 <State 25>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 26>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 27>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 28>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 29>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 30>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 31>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 32>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 33>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 34>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 35>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 36>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 37>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 38>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 39>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 40>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 41>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 42>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_5', svm.cpp:66) [53]  (7.32 ns)

 <State 43>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_6', svm.cpp:66) [54]  (7.79 ns)

 <State 44>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_6', svm.cpp:66) [54]  (7.79 ns)

 <State 45>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_6', svm.cpp:66) [54]  (7.79 ns)

 <State 46>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_6', svm.cpp:66) [54]  (7.79 ns)

 <State 47>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_6', svm.cpp:66) [54]  (7.79 ns)

 <State 48>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_6', svm.cpp:66) [54]  (7.79 ns)

 <State 49>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('tmp_7', svm.cpp:66) [55]  (8.23 ns)

 <State 50>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('tmp_7', svm.cpp:66) [55]  (8.23 ns)

 <State 51>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('tmp_7', svm.cpp:66) [55]  (8.23 ns)

 <State 52>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('tmp_7', svm.cpp:66) [55]  (8.23 ns)

 <State 53>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('tmp_7', svm.cpp:66) [55]  (8.23 ns)

 <State 54>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('sum', svm.cpp:66) [56]  (8.23 ns)

 <State 55>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('sum', svm.cpp:66) [56]  (8.23 ns)

 <State 56>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('sum', svm.cpp:66) [56]  (8.23 ns)

 <State 57>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('sum', svm.cpp:66) [56]  (8.23 ns)

 <State 58>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('sum', svm.cpp:66) [56]  (8.23 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
