

================================================================
== Vivado HLS Report for 'svm'
================================================================
* Date:           Thu Jul 15 16:38:14 2021

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        hls2-svm
* Solution:       solution3
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.232|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  175969|  175969|  175969|  175969|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+--------+--------+----------+-----------+-----------+------+----------+
        |                   |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Sum_Outter_Loop  |  175968|  175968|       144|          -|          -|  1222|    no    |
        | + Sum_Inner_Loop  |     102|     102|        51|          -|          -|     2|    no    |
        +-------------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 93
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond)
3 --> 
	4  / (tmp_2)
	54  / (!tmp_2)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	3  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	2  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %class_hw) nounwind, !map !14"   --->   Operation 94 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([18 x float]* %x) nounwind, !map !18"   --->   Operation 95 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @svm_str) nounwind"   --->   Operation 96 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (1.76ns)   --->   "br label %1" [svm.cpp:27]   --->   Operation 97 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 7.81>
ST_2 : Operation 98 [1/1] (0.00ns)   --->   "%sum = phi double [ 0.000000e+00, %0 ], [ %sum_1, %5 ]"   --->   Operation 98 'phi' 'sum' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 99 [1/1] (0.00ns)   --->   "%i = phi i11 [ 0, %0 ], [ %i_1, %5 ]"   --->   Operation 99 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 100 [1/1] (1.88ns)   --->   "%exitcond = icmp eq i11 %i, -826" [svm.cpp:27]   --->   Operation 100 'icmp' 'exitcond' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.89> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 101 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1222, i64 1222, i64 1222) nounwind"   --->   Operation 101 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 102 [1/1] (1.63ns)   --->   "%i_1 = add i11 %i, 1" [svm.cpp:27]   --->   Operation 102 'add' 'i_1' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 103 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %6, label %2" [svm.cpp:27]   --->   Operation 103 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 104 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([16 x i8]* @p_str) nounwind" [svm.cpp:28]   --->   Operation 104 'specloopname' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_32 = call i32 (...)* @_ssdm_op_SpecRegionBegin([16 x i8]* @p_str) nounwind" [svm.cpp:28]   --->   Operation 105 'specregionbegin' 'tmp_32' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_1 = zext i11 %i to i64" [svm.cpp:42]   --->   Operation 106 'zext' 'tmp_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 107 [1/1] (0.00ns)   --->   "%tmp_37 = call i15 @_ssdm_op_BitConcatenate.i15.i11.i4(i11 %i, i4 0)" [svm.cpp:27]   --->   Operation 107 'bitconcatenate' 'tmp_37' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 108 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i15 %tmp_37 to i16" [svm.cpp:27]   --->   Operation 108 'zext' 'p_shl_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_38 = call i12 @_ssdm_op_BitConcatenate.i12.i11.i1(i11 %i, i1 false)" [svm.cpp:27]   --->   Operation 109 'bitconcatenate' 'tmp_38' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 110 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i12 %tmp_38 to i16" [svm.cpp:42]   --->   Operation 110 'zext' 'p_shl1_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 111 [1/1] (1.94ns)   --->   "%tmp_39 = add i16 %p_shl1_cast, %p_shl_cast" [svm.cpp:42]   --->   Operation 111 'add' 'tmp_39' <Predicate = (!exitcond)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 112 [1/1] (1.76ns)   --->   "br label %3" [svm.cpp:32]   --->   Operation 112 'br' <Predicate = (!exitcond)> <Delay = 1.76>
ST_2 : Operation 113 [1/1] (0.00ns)   --->   "%sum_to_int = bitcast double %sum to i64" [svm.cpp:66]   --->   Operation 113 'bitcast' 'sum_to_int' <Predicate = (exitcond)> <Delay = 0.00>
ST_2 : Operation 114 [1/1] (0.00ns)   --->   "%tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %sum_to_int, i32 52, i32 62)" [svm.cpp:66]   --->   Operation 114 'partselect' 'tmp' <Predicate = (exitcond)> <Delay = 0.00>
ST_2 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_33 = trunc i64 %sum_to_int to i52" [svm.cpp:66]   --->   Operation 115 'trunc' 'tmp_33' <Predicate = (exitcond)> <Delay = 0.00>
ST_2 : Operation 116 [1/1] (1.88ns)   --->   "%notlhs = icmp ne i11 %tmp, -1" [svm.cpp:66]   --->   Operation 116 'icmp' 'notlhs' <Predicate = (exitcond)> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.89> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 117 [1/1] (2.89ns)   --->   "%notrhs = icmp eq i52 %tmp_33, 0" [svm.cpp:66]   --->   Operation 117 'icmp' 'notrhs' <Predicate = (exitcond)> <Delay = 2.89> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.89> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node storemerge_cast_cast)   --->   "%tmp_34 = or i1 %notrhs, %notlhs" [svm.cpp:66]   --->   Operation 118 'or' 'tmp_34' <Predicate = (exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 119 [1/1] (6.82ns)   --->   "%tmp_35 = fcmp ogt double %sum, 0.000000e+00" [svm.cpp:69]   --->   Operation 119 'dcmp' 'tmp_35' <Predicate = (exitcond)> <Delay = 6.82> <Core = "DCmp">   --->   Core 114 'DCmp' <Latency = 0> <II = 1> <Delay = 6.82> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node storemerge_cast_cast)   --->   "%tmp_36 = and i1 %tmp_34, %tmp_35" [svm.cpp:69]   --->   Operation 120 'and' 'tmp_36' <Predicate = (exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 121 [1/1] (0.99ns) (out node of the LUT)   --->   "%storemerge_cast_cast = select i1 %tmp_36, i16 1, i16 -1" [svm.cpp:69]   --->   Operation 121 'select' 'storemerge_cast_cast' <Predicate = (exitcond)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 122 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i16P(i16* %class_hw, i16 %storemerge_cast_cast) nounwind" [svm.cpp:69]   --->   Operation 122 'write' <Predicate = (exitcond)> <Delay = 0.00>
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "ret void" [svm.cpp:71]   --->   Operation 123 'ret' <Predicate = (exitcond)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.11>
ST_3 : Operation 124 [1/1] (0.00ns)   --->   "%norm = phi float [ 0.000000e+00, %2 ], [ %norm_1, %4 ]"   --->   Operation 124 'phi' 'norm' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 125 [1/1] (0.00ns)   --->   "%j = phi i5 [ 0, %2 ], [ %j_1, %4 ]"   --->   Operation 125 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 126 [1/1] (1.36ns)   --->   "%tmp_2 = icmp ult i5 %j, -14" [svm.cpp:32]   --->   Operation 126 'icmp' 'tmp_2' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.89> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 127 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 127 'speclooptripcount' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 128 [1/1] (0.00ns)   --->   "br i1 %tmp_2, label %4, label %5" [svm.cpp:32]   --->   Operation 128 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_3 = zext i5 %j to i64" [svm.cpp:42]   --->   Operation 129 'zext' 'tmp_3' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_3_cast = zext i5 %j to i16" [svm.cpp:42]   --->   Operation 130 'zext' 'tmp_3_cast' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 131 [1/1] (2.07ns)   --->   "%tmp_40 = add i16 %tmp_39, %tmp_3_cast" [svm.cpp:42]   --->   Operation 131 'add' 'tmp_40' <Predicate = (tmp_2)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 132 [1/1] (0.00ns)   --->   "%tmp_40_cast = zext i16 %tmp_40 to i64" [svm.cpp:42]   --->   Operation 132 'zext' 'tmp_40_cast' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 133 [1/1] (0.00ns)   --->   "%SupVec_addr = getelementptr [21996 x float]* @SupVec, i64 0, i64 %tmp_40_cast" [svm.cpp:42]   --->   Operation 133 'getelementptr' 'SupVec_addr' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 134 [1/1] (0.00ns)   --->   "%x_addr = getelementptr [18 x float]* %x, i64 0, i64 %tmp_3" [svm.cpp:42]   --->   Operation 134 'getelementptr' 'x_addr' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 135 [2/2] (2.32ns)   --->   "%x_load = load float* %x_addr, align 4" [svm.cpp:42]   --->   Operation 135 'load' 'x_load' <Predicate = (tmp_2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_3 : Operation 136 [2/2] (3.25ns)   --->   "%SupVec_load = load float* %SupVec_addr, align 4" [svm.cpp:42]   --->   Operation 136 'load' 'SupVec_load' <Predicate = (tmp_2)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_3 : Operation 137 [1/1] (1.78ns)   --->   "%tmp_4 = add i5 %j, 1" [svm.cpp:43]   --->   Operation 137 'add' 'tmp_4' <Predicate = (tmp_2)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 138 [1/1] (0.00ns)   --->   "%tmp_5 = zext i5 %tmp_4 to i64" [svm.cpp:43]   --->   Operation 138 'zext' 'tmp_5' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 139 [1/1] (0.00ns)   --->   "%tmp_5_cast = zext i5 %tmp_4 to i16" [svm.cpp:43]   --->   Operation 139 'zext' 'tmp_5_cast' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 140 [1/1] (2.07ns)   --->   "%tmp_41 = add i16 %tmp_39, %tmp_5_cast" [svm.cpp:43]   --->   Operation 140 'add' 'tmp_41' <Predicate = (tmp_2)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 141 [1/1] (0.00ns)   --->   "%tmp_41_cast = zext i16 %tmp_41 to i64" [svm.cpp:43]   --->   Operation 141 'zext' 'tmp_41_cast' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 142 [1/1] (0.00ns)   --->   "%SupVec_addr_1 = getelementptr [21996 x float]* @SupVec, i64 0, i64 %tmp_41_cast" [svm.cpp:43]   --->   Operation 142 'getelementptr' 'SupVec_addr_1' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 143 [1/1] (0.00ns)   --->   "%x_addr_1 = getelementptr [18 x float]* %x, i64 0, i64 %tmp_5" [svm.cpp:43]   --->   Operation 143 'getelementptr' 'x_addr_1' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 144 [2/2] (2.32ns)   --->   "%x_load_1 = load float* %x_addr_1, align 4" [svm.cpp:43]   --->   Operation 144 'load' 'x_load_1' <Predicate = (tmp_2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_3 : Operation 145 [2/2] (3.25ns)   --->   "%SupVec_load_1 = load float* %SupVec_addr_1, align 4" [svm.cpp:43]   --->   Operation 145 'load' 'SupVec_load_1' <Predicate = (tmp_2)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_3 : Operation 146 [1/1] (0.00ns)   --->   "%Co_addr = getelementptr inbounds [1222 x float]* @Co, i64 0, i64 %tmp_1" [svm.cpp:66]   --->   Operation 146 'getelementptr' 'Co_addr' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_3 : Operation 147 [2/2] (3.25ns)   --->   "%Co_load = load float* %Co_addr, align 4" [svm.cpp:66]   --->   Operation 147 'load' 'Co_load' <Predicate = (!tmp_2)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_3 : Operation 148 [1/1] (5.54ns)   --->   "%tmp_27 = fpext float %norm to double" [svm.cpp:66]   --->   Operation 148 'fpext' 'tmp_27' <Predicate = (!tmp_2)> <Delay = 5.54> <Core = "Float2Double">   --->   Core 108 'Float2Double' <Latency = 0> <II = 1> <Delay = 5.54> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 149 [1/2] (2.32ns)   --->   "%x_load = load float* %x_addr, align 4" [svm.cpp:42]   --->   Operation 149 'load' 'x_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_4 : Operation 150 [1/2] (3.25ns)   --->   "%SupVec_load = load float* %SupVec_addr, align 4" [svm.cpp:42]   --->   Operation 150 'load' 'SupVec_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_4 : Operation 151 [1/2] (2.32ns)   --->   "%x_load_1 = load float* %x_addr_1, align 4" [svm.cpp:43]   --->   Operation 151 'load' 'x_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_4 : Operation 152 [1/2] (3.25ns)   --->   "%SupVec_load_1 = load float* %SupVec_addr_1, align 4" [svm.cpp:43]   --->   Operation 152 'load' 'SupVec_load_1' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>

State 5 <SV = 4> <Delay = 7.25>
ST_5 : Operation 153 [5/5] (7.25ns)   --->   "%dif0 = fsub float %x_load, %SupVec_load" [svm.cpp:42]   --->   Operation 153 'fsub' 'dif0' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 154 [5/5] (7.25ns)   --->   "%dif1 = fsub float %x_load_1, %SupVec_load_1" [svm.cpp:43]   --->   Operation 154 'fsub' 'dif1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 7.25>
ST_6 : Operation 155 [4/5] (7.25ns)   --->   "%dif0 = fsub float %x_load, %SupVec_load" [svm.cpp:42]   --->   Operation 155 'fsub' 'dif0' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 156 [4/5] (7.25ns)   --->   "%dif1 = fsub float %x_load_1, %SupVec_load_1" [svm.cpp:43]   --->   Operation 156 'fsub' 'dif1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.25>
ST_7 : Operation 157 [3/5] (7.25ns)   --->   "%dif0 = fsub float %x_load, %SupVec_load" [svm.cpp:42]   --->   Operation 157 'fsub' 'dif0' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 158 [3/5] (7.25ns)   --->   "%dif1 = fsub float %x_load_1, %SupVec_load_1" [svm.cpp:43]   --->   Operation 158 'fsub' 'dif1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.25>
ST_8 : Operation 159 [2/5] (7.25ns)   --->   "%dif0 = fsub float %x_load, %SupVec_load" [svm.cpp:42]   --->   Operation 159 'fsub' 'dif0' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 160 [2/5] (7.25ns)   --->   "%dif1 = fsub float %x_load_1, %SupVec_load_1" [svm.cpp:43]   --->   Operation 160 'fsub' 'dif1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 161 [1/1] (1.78ns)   --->   "%tmp_6 = add i5 %j, 2" [svm.cpp:44]   --->   Operation 161 'add' 'tmp_6' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 162 [1/1] (0.00ns)   --->   "%tmp_7 = zext i5 %tmp_6 to i64" [svm.cpp:44]   --->   Operation 162 'zext' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 163 [1/1] (0.00ns)   --->   "%tmp_7_cast = zext i5 %tmp_6 to i16" [svm.cpp:44]   --->   Operation 163 'zext' 'tmp_7_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 164 [1/1] (2.07ns)   --->   "%tmp_42 = add i16 %tmp_39, %tmp_7_cast" [svm.cpp:44]   --->   Operation 164 'add' 'tmp_42' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_42_cast = zext i16 %tmp_42 to i64" [svm.cpp:44]   --->   Operation 165 'zext' 'tmp_42_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 166 [1/1] (0.00ns)   --->   "%SupVec_addr_2 = getelementptr [21996 x float]* @SupVec, i64 0, i64 %tmp_42_cast" [svm.cpp:44]   --->   Operation 166 'getelementptr' 'SupVec_addr_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 167 [1/1] (0.00ns)   --->   "%x_addr_2 = getelementptr [18 x float]* %x, i64 0, i64 %tmp_7" [svm.cpp:44]   --->   Operation 167 'getelementptr' 'x_addr_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 168 [2/2] (2.32ns)   --->   "%x_load_2 = load float* %x_addr_2, align 4" [svm.cpp:44]   --->   Operation 168 'load' 'x_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_8 : Operation 169 [2/2] (3.25ns)   --->   "%SupVec_load_2 = load float* %SupVec_addr_2, align 4" [svm.cpp:44]   --->   Operation 169 'load' 'SupVec_load_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>

State 9 <SV = 8> <Delay = 7.25>
ST_9 : Operation 170 [1/5] (7.25ns)   --->   "%dif0 = fsub float %x_load, %SupVec_load" [svm.cpp:42]   --->   Operation 170 'fsub' 'dif0' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 171 [1/5] (7.25ns)   --->   "%dif1 = fsub float %x_load_1, %SupVec_load_1" [svm.cpp:43]   --->   Operation 171 'fsub' 'dif1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 172 [1/2] (2.32ns)   --->   "%x_load_2 = load float* %x_addr_2, align 4" [svm.cpp:44]   --->   Operation 172 'load' 'x_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_9 : Operation 173 [1/2] (3.25ns)   --->   "%SupVec_load_2 = load float* %SupVec_addr_2, align 4" [svm.cpp:44]   --->   Operation 173 'load' 'SupVec_load_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>

State 10 <SV = 9> <Delay = 7.25>
ST_10 : Operation 174 [5/5] (7.25ns)   --->   "%dif2 = fsub float %x_load_2, %SupVec_load_2" [svm.cpp:44]   --->   Operation 174 'fsub' 'dif2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 175 [4/4] (5.70ns)   --->   "%mul0 = fmul float %dif0, %dif0" [svm.cpp:52]   --->   Operation 175 'fmul' 'mul0' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 176 [4/4] (5.70ns)   --->   "%mul1 = fmul float %dif1, %dif1" [svm.cpp:53]   --->   Operation 176 'fmul' 'mul1' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.25>
ST_11 : Operation 177 [4/5] (7.25ns)   --->   "%dif2 = fsub float %x_load_2, %SupVec_load_2" [svm.cpp:44]   --->   Operation 177 'fsub' 'dif2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 178 [3/4] (5.70ns)   --->   "%mul0 = fmul float %dif0, %dif0" [svm.cpp:52]   --->   Operation 178 'fmul' 'mul0' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 179 [3/4] (5.70ns)   --->   "%mul1 = fmul float %dif1, %dif1" [svm.cpp:53]   --->   Operation 179 'fmul' 'mul1' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.25>
ST_12 : Operation 180 [3/5] (7.25ns)   --->   "%dif2 = fsub float %x_load_2, %SupVec_load_2" [svm.cpp:44]   --->   Operation 180 'fsub' 'dif2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 181 [2/4] (5.70ns)   --->   "%mul0 = fmul float %dif0, %dif0" [svm.cpp:52]   --->   Operation 181 'fmul' 'mul0' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 182 [2/4] (5.70ns)   --->   "%mul1 = fmul float %dif1, %dif1" [svm.cpp:53]   --->   Operation 182 'fmul' 'mul1' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 7.25>
ST_13 : Operation 183 [2/5] (7.25ns)   --->   "%dif2 = fsub float %x_load_2, %SupVec_load_2" [svm.cpp:44]   --->   Operation 183 'fsub' 'dif2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 184 [1/1] (1.78ns)   --->   "%tmp_8 = add i5 %j, 3" [svm.cpp:45]   --->   Operation 184 'add' 'tmp_8' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 185 [1/1] (0.00ns)   --->   "%tmp_9 = zext i5 %tmp_8 to i64" [svm.cpp:45]   --->   Operation 185 'zext' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 186 [1/1] (0.00ns)   --->   "%tmp_9_cast = zext i5 %tmp_8 to i16" [svm.cpp:45]   --->   Operation 186 'zext' 'tmp_9_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 187 [1/1] (2.07ns)   --->   "%tmp_43 = add i16 %tmp_39, %tmp_9_cast" [svm.cpp:45]   --->   Operation 187 'add' 'tmp_43' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 188 [1/1] (0.00ns)   --->   "%tmp_43_cast = zext i16 %tmp_43 to i64" [svm.cpp:45]   --->   Operation 188 'zext' 'tmp_43_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 189 [1/1] (0.00ns)   --->   "%SupVec_addr_3 = getelementptr [21996 x float]* @SupVec, i64 0, i64 %tmp_43_cast" [svm.cpp:45]   --->   Operation 189 'getelementptr' 'SupVec_addr_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 190 [1/1] (0.00ns)   --->   "%x_addr_3 = getelementptr [18 x float]* %x, i64 0, i64 %tmp_9" [svm.cpp:45]   --->   Operation 190 'getelementptr' 'x_addr_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 191 [2/2] (2.32ns)   --->   "%x_load_3 = load float* %x_addr_3, align 4" [svm.cpp:45]   --->   Operation 191 'load' 'x_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_13 : Operation 192 [2/2] (3.25ns)   --->   "%SupVec_load_3 = load float* %SupVec_addr_3, align 4" [svm.cpp:45]   --->   Operation 192 'load' 'SupVec_load_3' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_13 : Operation 193 [1/4] (5.70ns)   --->   "%mul0 = fmul float %dif0, %dif0" [svm.cpp:52]   --->   Operation 193 'fmul' 'mul0' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 194 [1/4] (5.70ns)   --->   "%mul1 = fmul float %dif1, %dif1" [svm.cpp:53]   --->   Operation 194 'fmul' 'mul1' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 7.25>
ST_14 : Operation 195 [1/5] (7.25ns)   --->   "%dif2 = fsub float %x_load_2, %SupVec_load_2" [svm.cpp:44]   --->   Operation 195 'fsub' 'dif2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 196 [1/2] (2.32ns)   --->   "%x_load_3 = load float* %x_addr_3, align 4" [svm.cpp:45]   --->   Operation 196 'load' 'x_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_14 : Operation 197 [1/2] (3.25ns)   --->   "%SupVec_load_3 = load float* %SupVec_addr_3, align 4" [svm.cpp:45]   --->   Operation 197 'load' 'SupVec_load_3' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_14 : Operation 198 [5/5] (7.25ns)   --->   "%tmp_19 = fadd float %mul0, %mul1" [svm.cpp:62]   --->   Operation 198 'fadd' 'tmp_19' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 7.25>
ST_15 : Operation 199 [5/5] (7.25ns)   --->   "%dif3 = fsub float %x_load_3, %SupVec_load_3" [svm.cpp:45]   --->   Operation 199 'fsub' 'dif3' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 200 [4/4] (5.70ns)   --->   "%mul2 = fmul float %dif2, %dif2" [svm.cpp:54]   --->   Operation 200 'fmul' 'mul2' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 201 [4/5] (7.25ns)   --->   "%tmp_19 = fadd float %mul0, %mul1" [svm.cpp:62]   --->   Operation 201 'fadd' 'tmp_19' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.25>
ST_16 : Operation 202 [4/5] (7.25ns)   --->   "%dif3 = fsub float %x_load_3, %SupVec_load_3" [svm.cpp:45]   --->   Operation 202 'fsub' 'dif3' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 203 [3/4] (5.70ns)   --->   "%mul2 = fmul float %dif2, %dif2" [svm.cpp:54]   --->   Operation 203 'fmul' 'mul2' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 204 [3/5] (7.25ns)   --->   "%tmp_19 = fadd float %mul0, %mul1" [svm.cpp:62]   --->   Operation 204 'fadd' 'tmp_19' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 7.25>
ST_17 : Operation 205 [3/5] (7.25ns)   --->   "%dif3 = fsub float %x_load_3, %SupVec_load_3" [svm.cpp:45]   --->   Operation 205 'fsub' 'dif3' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 206 [2/4] (5.70ns)   --->   "%mul2 = fmul float %dif2, %dif2" [svm.cpp:54]   --->   Operation 206 'fmul' 'mul2' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 207 [2/5] (7.25ns)   --->   "%tmp_19 = fadd float %mul0, %mul1" [svm.cpp:62]   --->   Operation 207 'fadd' 'tmp_19' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 7.25>
ST_18 : Operation 208 [2/5] (7.25ns)   --->   "%dif3 = fsub float %x_load_3, %SupVec_load_3" [svm.cpp:45]   --->   Operation 208 'fsub' 'dif3' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 209 [1/1] (1.78ns)   --->   "%tmp_s = add i5 %j, 4" [svm.cpp:46]   --->   Operation 209 'add' 'tmp_s' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 210 [1/1] (0.00ns)   --->   "%tmp_10 = zext i5 %tmp_s to i64" [svm.cpp:46]   --->   Operation 210 'zext' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 211 [1/1] (0.00ns)   --->   "%tmp_10_cast = zext i5 %tmp_s to i16" [svm.cpp:46]   --->   Operation 211 'zext' 'tmp_10_cast' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 212 [1/1] (2.07ns)   --->   "%tmp_44 = add i16 %tmp_39, %tmp_10_cast" [svm.cpp:46]   --->   Operation 212 'add' 'tmp_44' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 213 [1/1] (0.00ns)   --->   "%tmp_44_cast = zext i16 %tmp_44 to i64" [svm.cpp:46]   --->   Operation 213 'zext' 'tmp_44_cast' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 214 [1/1] (0.00ns)   --->   "%SupVec_addr_4 = getelementptr [21996 x float]* @SupVec, i64 0, i64 %tmp_44_cast" [svm.cpp:46]   --->   Operation 214 'getelementptr' 'SupVec_addr_4' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 215 [1/1] (0.00ns)   --->   "%x_addr_4 = getelementptr [18 x float]* %x, i64 0, i64 %tmp_10" [svm.cpp:46]   --->   Operation 215 'getelementptr' 'x_addr_4' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 216 [2/2] (2.32ns)   --->   "%x_load_4 = load float* %x_addr_4, align 4" [svm.cpp:46]   --->   Operation 216 'load' 'x_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_18 : Operation 217 [2/2] (3.25ns)   --->   "%SupVec_load_4 = load float* %SupVec_addr_4, align 4" [svm.cpp:46]   --->   Operation 217 'load' 'SupVec_load_4' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_18 : Operation 218 [1/4] (5.70ns)   --->   "%mul2 = fmul float %dif2, %dif2" [svm.cpp:54]   --->   Operation 218 'fmul' 'mul2' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 219 [1/5] (7.25ns)   --->   "%tmp_19 = fadd float %mul0, %mul1" [svm.cpp:62]   --->   Operation 219 'fadd' 'tmp_19' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 7.25>
ST_19 : Operation 220 [1/5] (7.25ns)   --->   "%dif3 = fsub float %x_load_3, %SupVec_load_3" [svm.cpp:45]   --->   Operation 220 'fsub' 'dif3' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 221 [1/2] (2.32ns)   --->   "%x_load_4 = load float* %x_addr_4, align 4" [svm.cpp:46]   --->   Operation 221 'load' 'x_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_19 : Operation 222 [1/2] (3.25ns)   --->   "%SupVec_load_4 = load float* %SupVec_addr_4, align 4" [svm.cpp:46]   --->   Operation 222 'load' 'SupVec_load_4' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_19 : Operation 223 [5/5] (7.25ns)   --->   "%tmp_20 = fadd float %tmp_19, %mul2" [svm.cpp:62]   --->   Operation 223 'fadd' 'tmp_20' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 7.25>
ST_20 : Operation 224 [5/5] (7.25ns)   --->   "%dif4 = fsub float %x_load_4, %SupVec_load_4" [svm.cpp:46]   --->   Operation 224 'fsub' 'dif4' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 225 [4/4] (5.70ns)   --->   "%mul3 = fmul float %dif3, %dif3" [svm.cpp:55]   --->   Operation 225 'fmul' 'mul3' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 226 [4/5] (7.25ns)   --->   "%tmp_20 = fadd float %tmp_19, %mul2" [svm.cpp:62]   --->   Operation 226 'fadd' 'tmp_20' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 7.25>
ST_21 : Operation 227 [4/5] (7.25ns)   --->   "%dif4 = fsub float %x_load_4, %SupVec_load_4" [svm.cpp:46]   --->   Operation 227 'fsub' 'dif4' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 228 [3/4] (5.70ns)   --->   "%mul3 = fmul float %dif3, %dif3" [svm.cpp:55]   --->   Operation 228 'fmul' 'mul3' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 229 [3/5] (7.25ns)   --->   "%tmp_20 = fadd float %tmp_19, %mul2" [svm.cpp:62]   --->   Operation 229 'fadd' 'tmp_20' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 7.25>
ST_22 : Operation 230 [3/5] (7.25ns)   --->   "%dif4 = fsub float %x_load_4, %SupVec_load_4" [svm.cpp:46]   --->   Operation 230 'fsub' 'dif4' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 231 [2/4] (5.70ns)   --->   "%mul3 = fmul float %dif3, %dif3" [svm.cpp:55]   --->   Operation 231 'fmul' 'mul3' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 232 [2/5] (7.25ns)   --->   "%tmp_20 = fadd float %tmp_19, %mul2" [svm.cpp:62]   --->   Operation 232 'fadd' 'tmp_20' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 7.25>
ST_23 : Operation 233 [2/5] (7.25ns)   --->   "%dif4 = fsub float %x_load_4, %SupVec_load_4" [svm.cpp:46]   --->   Operation 233 'fsub' 'dif4' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 234 [1/1] (1.78ns)   --->   "%tmp_11 = add i5 %j, 5" [svm.cpp:47]   --->   Operation 234 'add' 'tmp_11' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 235 [1/1] (0.00ns)   --->   "%tmp_12 = zext i5 %tmp_11 to i64" [svm.cpp:47]   --->   Operation 235 'zext' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 236 [1/1] (0.00ns)   --->   "%tmp_12_cast = zext i5 %tmp_11 to i16" [svm.cpp:47]   --->   Operation 236 'zext' 'tmp_12_cast' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 237 [1/1] (2.07ns)   --->   "%tmp_45 = add i16 %tmp_39, %tmp_12_cast" [svm.cpp:47]   --->   Operation 237 'add' 'tmp_45' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 238 [1/1] (0.00ns)   --->   "%tmp_45_cast = zext i16 %tmp_45 to i64" [svm.cpp:47]   --->   Operation 238 'zext' 'tmp_45_cast' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 239 [1/1] (0.00ns)   --->   "%SupVec_addr_5 = getelementptr [21996 x float]* @SupVec, i64 0, i64 %tmp_45_cast" [svm.cpp:47]   --->   Operation 239 'getelementptr' 'SupVec_addr_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 240 [1/1] (0.00ns)   --->   "%x_addr_5 = getelementptr [18 x float]* %x, i64 0, i64 %tmp_12" [svm.cpp:47]   --->   Operation 240 'getelementptr' 'x_addr_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 241 [2/2] (2.32ns)   --->   "%x_load_5 = load float* %x_addr_5, align 4" [svm.cpp:47]   --->   Operation 241 'load' 'x_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_23 : Operation 242 [2/2] (3.25ns)   --->   "%SupVec_load_5 = load float* %SupVec_addr_5, align 4" [svm.cpp:47]   --->   Operation 242 'load' 'SupVec_load_5' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_23 : Operation 243 [1/4] (5.70ns)   --->   "%mul3 = fmul float %dif3, %dif3" [svm.cpp:55]   --->   Operation 243 'fmul' 'mul3' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 244 [1/5] (7.25ns)   --->   "%tmp_20 = fadd float %tmp_19, %mul2" [svm.cpp:62]   --->   Operation 244 'fadd' 'tmp_20' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 7.25>
ST_24 : Operation 245 [1/5] (7.25ns)   --->   "%dif4 = fsub float %x_load_4, %SupVec_load_4" [svm.cpp:46]   --->   Operation 245 'fsub' 'dif4' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 246 [1/2] (2.32ns)   --->   "%x_load_5 = load float* %x_addr_5, align 4" [svm.cpp:47]   --->   Operation 246 'load' 'x_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_24 : Operation 247 [1/2] (3.25ns)   --->   "%SupVec_load_5 = load float* %SupVec_addr_5, align 4" [svm.cpp:47]   --->   Operation 247 'load' 'SupVec_load_5' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_24 : Operation 248 [5/5] (7.25ns)   --->   "%tmp_21 = fadd float %tmp_20, %mul3" [svm.cpp:62]   --->   Operation 248 'fadd' 'tmp_21' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 7.25>
ST_25 : Operation 249 [5/5] (7.25ns)   --->   "%dif5 = fsub float %x_load_5, %SupVec_load_5" [svm.cpp:47]   --->   Operation 249 'fsub' 'dif5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 250 [4/4] (5.70ns)   --->   "%mul4 = fmul float %dif4, %dif4" [svm.cpp:56]   --->   Operation 250 'fmul' 'mul4' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 251 [4/5] (7.25ns)   --->   "%tmp_21 = fadd float %tmp_20, %mul3" [svm.cpp:62]   --->   Operation 251 'fadd' 'tmp_21' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 7.25>
ST_26 : Operation 252 [4/5] (7.25ns)   --->   "%dif5 = fsub float %x_load_5, %SupVec_load_5" [svm.cpp:47]   --->   Operation 252 'fsub' 'dif5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 253 [3/4] (5.70ns)   --->   "%mul4 = fmul float %dif4, %dif4" [svm.cpp:56]   --->   Operation 253 'fmul' 'mul4' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 254 [3/5] (7.25ns)   --->   "%tmp_21 = fadd float %tmp_20, %mul3" [svm.cpp:62]   --->   Operation 254 'fadd' 'tmp_21' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 7.25>
ST_27 : Operation 255 [3/5] (7.25ns)   --->   "%dif5 = fsub float %x_load_5, %SupVec_load_5" [svm.cpp:47]   --->   Operation 255 'fsub' 'dif5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 256 [2/4] (5.70ns)   --->   "%mul4 = fmul float %dif4, %dif4" [svm.cpp:56]   --->   Operation 256 'fmul' 'mul4' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 257 [2/5] (7.25ns)   --->   "%tmp_21 = fadd float %tmp_20, %mul3" [svm.cpp:62]   --->   Operation 257 'fadd' 'tmp_21' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 7.25>
ST_28 : Operation 258 [2/5] (7.25ns)   --->   "%dif5 = fsub float %x_load_5, %SupVec_load_5" [svm.cpp:47]   --->   Operation 258 'fsub' 'dif5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 259 [1/1] (1.78ns)   --->   "%tmp_13 = add i5 %j, 6" [svm.cpp:48]   --->   Operation 259 'add' 'tmp_13' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 260 [1/1] (0.00ns)   --->   "%tmp_14 = zext i5 %tmp_13 to i64" [svm.cpp:48]   --->   Operation 260 'zext' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 261 [1/1] (0.00ns)   --->   "%tmp_14_cast = zext i5 %tmp_13 to i16" [svm.cpp:48]   --->   Operation 261 'zext' 'tmp_14_cast' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 262 [1/1] (2.07ns)   --->   "%tmp_46 = add i16 %tmp_39, %tmp_14_cast" [svm.cpp:48]   --->   Operation 262 'add' 'tmp_46' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 263 [1/1] (0.00ns)   --->   "%tmp_46_cast = zext i16 %tmp_46 to i64" [svm.cpp:48]   --->   Operation 263 'zext' 'tmp_46_cast' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 264 [1/1] (0.00ns)   --->   "%SupVec_addr_6 = getelementptr [21996 x float]* @SupVec, i64 0, i64 %tmp_46_cast" [svm.cpp:48]   --->   Operation 264 'getelementptr' 'SupVec_addr_6' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 265 [1/1] (0.00ns)   --->   "%x_addr_6 = getelementptr [18 x float]* %x, i64 0, i64 %tmp_14" [svm.cpp:48]   --->   Operation 265 'getelementptr' 'x_addr_6' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 266 [2/2] (2.32ns)   --->   "%x_load_6 = load float* %x_addr_6, align 4" [svm.cpp:48]   --->   Operation 266 'load' 'x_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_28 : Operation 267 [2/2] (3.25ns)   --->   "%SupVec_load_6 = load float* %SupVec_addr_6, align 4" [svm.cpp:48]   --->   Operation 267 'load' 'SupVec_load_6' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_28 : Operation 268 [1/4] (5.70ns)   --->   "%mul4 = fmul float %dif4, %dif4" [svm.cpp:56]   --->   Operation 268 'fmul' 'mul4' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 269 [1/5] (7.25ns)   --->   "%tmp_21 = fadd float %tmp_20, %mul3" [svm.cpp:62]   --->   Operation 269 'fadd' 'tmp_21' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 7.25>
ST_29 : Operation 270 [1/5] (7.25ns)   --->   "%dif5 = fsub float %x_load_5, %SupVec_load_5" [svm.cpp:47]   --->   Operation 270 'fsub' 'dif5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 271 [1/2] (2.32ns)   --->   "%x_load_6 = load float* %x_addr_6, align 4" [svm.cpp:48]   --->   Operation 271 'load' 'x_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_29 : Operation 272 [1/2] (3.25ns)   --->   "%SupVec_load_6 = load float* %SupVec_addr_6, align 4" [svm.cpp:48]   --->   Operation 272 'load' 'SupVec_load_6' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_29 : Operation 273 [5/5] (7.25ns)   --->   "%tmp_22 = fadd float %tmp_21, %mul4" [svm.cpp:62]   --->   Operation 273 'fadd' 'tmp_22' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 7.25>
ST_30 : Operation 274 [5/5] (7.25ns)   --->   "%dif6 = fsub float %x_load_6, %SupVec_load_6" [svm.cpp:48]   --->   Operation 274 'fsub' 'dif6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 275 [4/4] (5.70ns)   --->   "%mul5 = fmul float %dif5, %dif5" [svm.cpp:57]   --->   Operation 275 'fmul' 'mul5' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 276 [4/5] (7.25ns)   --->   "%tmp_22 = fadd float %tmp_21, %mul4" [svm.cpp:62]   --->   Operation 276 'fadd' 'tmp_22' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 7.25>
ST_31 : Operation 277 [4/5] (7.25ns)   --->   "%dif6 = fsub float %x_load_6, %SupVec_load_6" [svm.cpp:48]   --->   Operation 277 'fsub' 'dif6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 278 [3/4] (5.70ns)   --->   "%mul5 = fmul float %dif5, %dif5" [svm.cpp:57]   --->   Operation 278 'fmul' 'mul5' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 279 [3/5] (7.25ns)   --->   "%tmp_22 = fadd float %tmp_21, %mul4" [svm.cpp:62]   --->   Operation 279 'fadd' 'tmp_22' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 7.25>
ST_32 : Operation 280 [3/5] (7.25ns)   --->   "%dif6 = fsub float %x_load_6, %SupVec_load_6" [svm.cpp:48]   --->   Operation 280 'fsub' 'dif6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 281 [2/4] (5.70ns)   --->   "%mul5 = fmul float %dif5, %dif5" [svm.cpp:57]   --->   Operation 281 'fmul' 'mul5' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 282 [2/5] (7.25ns)   --->   "%tmp_22 = fadd float %tmp_21, %mul4" [svm.cpp:62]   --->   Operation 282 'fadd' 'tmp_22' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 7.25>
ST_33 : Operation 283 [2/5] (7.25ns)   --->   "%dif6 = fsub float %x_load_6, %SupVec_load_6" [svm.cpp:48]   --->   Operation 283 'fsub' 'dif6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 284 [1/1] (1.78ns)   --->   "%tmp_15 = add i5 %j, 7" [svm.cpp:49]   --->   Operation 284 'add' 'tmp_15' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 285 [1/1] (0.00ns)   --->   "%tmp_16 = zext i5 %tmp_15 to i64" [svm.cpp:49]   --->   Operation 285 'zext' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 286 [1/1] (0.00ns)   --->   "%tmp_16_cast = zext i5 %tmp_15 to i16" [svm.cpp:49]   --->   Operation 286 'zext' 'tmp_16_cast' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 287 [1/1] (2.07ns)   --->   "%tmp_47 = add i16 %tmp_39, %tmp_16_cast" [svm.cpp:49]   --->   Operation 287 'add' 'tmp_47' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 288 [1/1] (0.00ns)   --->   "%tmp_47_cast = zext i16 %tmp_47 to i64" [svm.cpp:49]   --->   Operation 288 'zext' 'tmp_47_cast' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 289 [1/1] (0.00ns)   --->   "%SupVec_addr_7 = getelementptr [21996 x float]* @SupVec, i64 0, i64 %tmp_47_cast" [svm.cpp:49]   --->   Operation 289 'getelementptr' 'SupVec_addr_7' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 290 [1/1] (0.00ns)   --->   "%x_addr_7 = getelementptr [18 x float]* %x, i64 0, i64 %tmp_16" [svm.cpp:49]   --->   Operation 290 'getelementptr' 'x_addr_7' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 291 [2/2] (2.32ns)   --->   "%x_load_7 = load float* %x_addr_7, align 4" [svm.cpp:49]   --->   Operation 291 'load' 'x_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_33 : Operation 292 [2/2] (3.25ns)   --->   "%SupVec_load_7 = load float* %SupVec_addr_7, align 4" [svm.cpp:49]   --->   Operation 292 'load' 'SupVec_load_7' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_33 : Operation 293 [1/4] (5.70ns)   --->   "%mul5 = fmul float %dif5, %dif5" [svm.cpp:57]   --->   Operation 293 'fmul' 'mul5' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 294 [1/5] (7.25ns)   --->   "%tmp_22 = fadd float %tmp_21, %mul4" [svm.cpp:62]   --->   Operation 294 'fadd' 'tmp_22' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 33> <Delay = 7.25>
ST_34 : Operation 295 [1/5] (7.25ns)   --->   "%dif6 = fsub float %x_load_6, %SupVec_load_6" [svm.cpp:48]   --->   Operation 295 'fsub' 'dif6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 296 [1/2] (2.32ns)   --->   "%x_load_7 = load float* %x_addr_7, align 4" [svm.cpp:49]   --->   Operation 296 'load' 'x_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_34 : Operation 297 [1/2] (3.25ns)   --->   "%SupVec_load_7 = load float* %SupVec_addr_7, align 4" [svm.cpp:49]   --->   Operation 297 'load' 'SupVec_load_7' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_34 : Operation 298 [5/5] (7.25ns)   --->   "%tmp_23 = fadd float %tmp_22, %mul5" [svm.cpp:62]   --->   Operation 298 'fadd' 'tmp_23' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 34> <Delay = 7.25>
ST_35 : Operation 299 [5/5] (7.25ns)   --->   "%dif7 = fsub float %x_load_7, %SupVec_load_7" [svm.cpp:49]   --->   Operation 299 'fsub' 'dif7' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 300 [4/4] (5.70ns)   --->   "%mul6 = fmul float %dif6, %dif6" [svm.cpp:58]   --->   Operation 300 'fmul' 'mul6' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 301 [4/5] (7.25ns)   --->   "%tmp_23 = fadd float %tmp_22, %mul5" [svm.cpp:62]   --->   Operation 301 'fadd' 'tmp_23' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 35> <Delay = 7.25>
ST_36 : Operation 302 [4/5] (7.25ns)   --->   "%dif7 = fsub float %x_load_7, %SupVec_load_7" [svm.cpp:49]   --->   Operation 302 'fsub' 'dif7' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 303 [3/4] (5.70ns)   --->   "%mul6 = fmul float %dif6, %dif6" [svm.cpp:58]   --->   Operation 303 'fmul' 'mul6' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 304 [3/5] (7.25ns)   --->   "%tmp_23 = fadd float %tmp_22, %mul5" [svm.cpp:62]   --->   Operation 304 'fadd' 'tmp_23' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 36> <Delay = 7.25>
ST_37 : Operation 305 [3/5] (7.25ns)   --->   "%dif7 = fsub float %x_load_7, %SupVec_load_7" [svm.cpp:49]   --->   Operation 305 'fsub' 'dif7' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 306 [2/4] (5.70ns)   --->   "%mul6 = fmul float %dif6, %dif6" [svm.cpp:58]   --->   Operation 306 'fmul' 'mul6' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 307 [2/5] (7.25ns)   --->   "%tmp_23 = fadd float %tmp_22, %mul5" [svm.cpp:62]   --->   Operation 307 'fadd' 'tmp_23' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 37> <Delay = 7.25>
ST_38 : Operation 308 [2/5] (7.25ns)   --->   "%dif7 = fsub float %x_load_7, %SupVec_load_7" [svm.cpp:49]   --->   Operation 308 'fsub' 'dif7' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 309 [1/1] (1.78ns)   --->   "%tmp_17 = add i5 %j, 8" [svm.cpp:50]   --->   Operation 309 'add' 'tmp_17' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 310 [1/1] (0.00ns)   --->   "%tmp_18 = zext i5 %tmp_17 to i64" [svm.cpp:50]   --->   Operation 310 'zext' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 311 [1/1] (0.00ns)   --->   "%tmp_18_cast = zext i5 %tmp_17 to i16" [svm.cpp:50]   --->   Operation 311 'zext' 'tmp_18_cast' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 312 [1/1] (2.07ns)   --->   "%tmp_48 = add i16 %tmp_39, %tmp_18_cast" [svm.cpp:50]   --->   Operation 312 'add' 'tmp_48' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 313 [1/1] (0.00ns)   --->   "%tmp_48_cast = zext i16 %tmp_48 to i64" [svm.cpp:50]   --->   Operation 313 'zext' 'tmp_48_cast' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 314 [1/1] (0.00ns)   --->   "%SupVec_addr_8 = getelementptr [21996 x float]* @SupVec, i64 0, i64 %tmp_48_cast" [svm.cpp:50]   --->   Operation 314 'getelementptr' 'SupVec_addr_8' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 315 [1/1] (0.00ns)   --->   "%x_addr_8 = getelementptr [18 x float]* %x, i64 0, i64 %tmp_18" [svm.cpp:50]   --->   Operation 315 'getelementptr' 'x_addr_8' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 316 [2/2] (2.32ns)   --->   "%x_load_8 = load float* %x_addr_8, align 4" [svm.cpp:50]   --->   Operation 316 'load' 'x_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_38 : Operation 317 [2/2] (3.25ns)   --->   "%SupVec_load_8 = load float* %SupVec_addr_8, align 4" [svm.cpp:50]   --->   Operation 317 'load' 'SupVec_load_8' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_38 : Operation 318 [1/4] (5.70ns)   --->   "%mul6 = fmul float %dif6, %dif6" [svm.cpp:58]   --->   Operation 318 'fmul' 'mul6' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 319 [1/5] (7.25ns)   --->   "%tmp_23 = fadd float %tmp_22, %mul5" [svm.cpp:62]   --->   Operation 319 'fadd' 'tmp_23' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 320 [1/1] (1.78ns)   --->   "%j_1 = add i5 %j, 9" [svm.cpp:32]   --->   Operation 320 'add' 'j_1' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 38> <Delay = 7.25>
ST_39 : Operation 321 [1/5] (7.25ns)   --->   "%dif7 = fsub float %x_load_7, %SupVec_load_7" [svm.cpp:49]   --->   Operation 321 'fsub' 'dif7' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 322 [1/2] (2.32ns)   --->   "%x_load_8 = load float* %x_addr_8, align 4" [svm.cpp:50]   --->   Operation 322 'load' 'x_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_39 : Operation 323 [1/2] (3.25ns)   --->   "%SupVec_load_8 = load float* %SupVec_addr_8, align 4" [svm.cpp:50]   --->   Operation 323 'load' 'SupVec_load_8' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_39 : Operation 324 [5/5] (7.25ns)   --->   "%tmp_24 = fadd float %tmp_23, %mul6" [svm.cpp:62]   --->   Operation 324 'fadd' 'tmp_24' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 39> <Delay = 7.25>
ST_40 : Operation 325 [5/5] (7.25ns)   --->   "%dif8 = fsub float %x_load_8, %SupVec_load_8" [svm.cpp:50]   --->   Operation 325 'fsub' 'dif8' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 326 [4/4] (5.70ns)   --->   "%mul7 = fmul float %dif7, %dif7" [svm.cpp:59]   --->   Operation 326 'fmul' 'mul7' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 327 [4/5] (7.25ns)   --->   "%tmp_24 = fadd float %tmp_23, %mul6" [svm.cpp:62]   --->   Operation 327 'fadd' 'tmp_24' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 40> <Delay = 7.25>
ST_41 : Operation 328 [4/5] (7.25ns)   --->   "%dif8 = fsub float %x_load_8, %SupVec_load_8" [svm.cpp:50]   --->   Operation 328 'fsub' 'dif8' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 329 [3/4] (5.70ns)   --->   "%mul7 = fmul float %dif7, %dif7" [svm.cpp:59]   --->   Operation 329 'fmul' 'mul7' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 330 [3/5] (7.25ns)   --->   "%tmp_24 = fadd float %tmp_23, %mul6" [svm.cpp:62]   --->   Operation 330 'fadd' 'tmp_24' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 41> <Delay = 7.25>
ST_42 : Operation 331 [3/5] (7.25ns)   --->   "%dif8 = fsub float %x_load_8, %SupVec_load_8" [svm.cpp:50]   --->   Operation 331 'fsub' 'dif8' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 332 [2/4] (5.70ns)   --->   "%mul7 = fmul float %dif7, %dif7" [svm.cpp:59]   --->   Operation 332 'fmul' 'mul7' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 333 [2/5] (7.25ns)   --->   "%tmp_24 = fadd float %tmp_23, %mul6" [svm.cpp:62]   --->   Operation 333 'fadd' 'tmp_24' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 42> <Delay = 7.25>
ST_43 : Operation 334 [2/5] (7.25ns)   --->   "%dif8 = fsub float %x_load_8, %SupVec_load_8" [svm.cpp:50]   --->   Operation 334 'fsub' 'dif8' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 335 [1/4] (5.70ns)   --->   "%mul7 = fmul float %dif7, %dif7" [svm.cpp:59]   --->   Operation 335 'fmul' 'mul7' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 336 [1/5] (7.25ns)   --->   "%tmp_24 = fadd float %tmp_23, %mul6" [svm.cpp:62]   --->   Operation 336 'fadd' 'tmp_24' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 43> <Delay = 7.25>
ST_44 : Operation 337 [1/5] (7.25ns)   --->   "%dif8 = fsub float %x_load_8, %SupVec_load_8" [svm.cpp:50]   --->   Operation 337 'fsub' 'dif8' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 338 [5/5] (7.25ns)   --->   "%tmp_25 = fadd float %tmp_24, %mul7" [svm.cpp:62]   --->   Operation 338 'fadd' 'tmp_25' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 44> <Delay = 7.25>
ST_45 : Operation 339 [4/4] (5.70ns)   --->   "%mul8 = fmul float %dif8, %dif8" [svm.cpp:60]   --->   Operation 339 'fmul' 'mul8' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 340 [4/5] (7.25ns)   --->   "%tmp_25 = fadd float %tmp_24, %mul7" [svm.cpp:62]   --->   Operation 340 'fadd' 'tmp_25' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 45> <Delay = 7.25>
ST_46 : Operation 341 [3/4] (5.70ns)   --->   "%mul8 = fmul float %dif8, %dif8" [svm.cpp:60]   --->   Operation 341 'fmul' 'mul8' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 342 [3/5] (7.25ns)   --->   "%tmp_25 = fadd float %tmp_24, %mul7" [svm.cpp:62]   --->   Operation 342 'fadd' 'tmp_25' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 47 <SV = 46> <Delay = 7.25>
ST_47 : Operation 343 [2/4] (5.70ns)   --->   "%mul8 = fmul float %dif8, %dif8" [svm.cpp:60]   --->   Operation 343 'fmul' 'mul8' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 344 [2/5] (7.25ns)   --->   "%tmp_25 = fadd float %tmp_24, %mul7" [svm.cpp:62]   --->   Operation 344 'fadd' 'tmp_25' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 47> <Delay = 7.25>
ST_48 : Operation 345 [1/4] (5.70ns)   --->   "%mul8 = fmul float %dif8, %dif8" [svm.cpp:60]   --->   Operation 345 'fmul' 'mul8' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 346 [1/5] (7.25ns)   --->   "%tmp_25 = fadd float %tmp_24, %mul7" [svm.cpp:62]   --->   Operation 346 'fadd' 'tmp_25' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 48> <Delay = 7.25>
ST_49 : Operation 347 [5/5] (7.25ns)   --->   "%norm_1 = fadd float %tmp_25, %mul8" [svm.cpp:62]   --->   Operation 347 'fadd' 'norm_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 49> <Delay = 7.25>
ST_50 : Operation 348 [4/5] (7.25ns)   --->   "%norm_1 = fadd float %tmp_25, %mul8" [svm.cpp:62]   --->   Operation 348 'fadd' 'norm_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 50> <Delay = 7.25>
ST_51 : Operation 349 [3/5] (7.25ns)   --->   "%norm_1 = fadd float %tmp_25, %mul8" [svm.cpp:62]   --->   Operation 349 'fadd' 'norm_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 51> <Delay = 7.25>
ST_52 : Operation 350 [2/5] (7.25ns)   --->   "%norm_1 = fadd float %tmp_25, %mul8" [svm.cpp:62]   --->   Operation 350 'fadd' 'norm_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 53 <SV = 52> <Delay = 7.25>
ST_53 : Operation 351 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str1) nounwind" [svm.cpp:33]   --->   Operation 351 'specloopname' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 352 [1/5] (7.25ns)   --->   "%norm_1 = fadd float %tmp_25, %mul8" [svm.cpp:62]   --->   Operation 352 'fadd' 'norm_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 353 [1/1] (0.00ns)   --->   "br label %3" [svm.cpp:32]   --->   Operation 353 'br' <Predicate = true> <Delay = 0.00>

State 54 <SV = 3> <Delay = 7.78>
ST_54 : Operation 354 [1/2] (3.25ns)   --->   "%Co_load = load float* %Co_addr, align 4" [svm.cpp:66]   --->   Operation 354 'load' 'Co_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1222> <ROM>
ST_54 : Operation 355 [6/6] (7.78ns)   --->   "%tmp_28 = fmul double %tmp_27, -8.000000e+00" [svm.cpp:66]   --->   Operation 355 'dmul' 'tmp_28' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 55 <SV = 4> <Delay = 7.78>
ST_55 : Operation 356 [5/6] (7.78ns)   --->   "%tmp_28 = fmul double %tmp_27, -8.000000e+00" [svm.cpp:66]   --->   Operation 356 'dmul' 'tmp_28' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 56 <SV = 5> <Delay = 7.78>
ST_56 : Operation 357 [4/6] (7.78ns)   --->   "%tmp_28 = fmul double %tmp_27, -8.000000e+00" [svm.cpp:66]   --->   Operation 357 'dmul' 'tmp_28' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 57 <SV = 6> <Delay = 7.78>
ST_57 : Operation 358 [3/6] (7.78ns)   --->   "%tmp_28 = fmul double %tmp_27, -8.000000e+00" [svm.cpp:66]   --->   Operation 358 'dmul' 'tmp_28' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 58 <SV = 7> <Delay = 7.78>
ST_58 : Operation 359 [2/6] (7.78ns)   --->   "%tmp_28 = fmul double %tmp_27, -8.000000e+00" [svm.cpp:66]   --->   Operation 359 'dmul' 'tmp_28' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 59 <SV = 8> <Delay = 7.78>
ST_59 : Operation 360 [1/6] (7.78ns)   --->   "%tmp_28 = fmul double %tmp_27, -8.000000e+00" [svm.cpp:66]   --->   Operation 360 'dmul' 'tmp_28' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 60 <SV = 9> <Delay = 7.32>
ST_60 : Operation 361 [18/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 361 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 61 <SV = 10> <Delay = 7.32>
ST_61 : Operation 362 [17/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 362 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 62 <SV = 11> <Delay = 7.32>
ST_62 : Operation 363 [16/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 363 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 63 <SV = 12> <Delay = 7.32>
ST_63 : Operation 364 [15/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 364 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 64 <SV = 13> <Delay = 7.32>
ST_64 : Operation 365 [14/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 365 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 65 <SV = 14> <Delay = 7.32>
ST_65 : Operation 366 [13/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 366 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 66 <SV = 15> <Delay = 7.32>
ST_66 : Operation 367 [12/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 367 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 67 <SV = 16> <Delay = 7.32>
ST_67 : Operation 368 [11/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 368 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 68 <SV = 17> <Delay = 7.32>
ST_68 : Operation 369 [10/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 369 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 69 <SV = 18> <Delay = 7.32>
ST_69 : Operation 370 [9/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 370 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 70 <SV = 19> <Delay = 7.32>
ST_70 : Operation 371 [8/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 371 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 71 <SV = 20> <Delay = 7.32>
ST_71 : Operation 372 [7/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 372 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 72 <SV = 21> <Delay = 7.32>
ST_72 : Operation 373 [6/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 373 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 73 <SV = 22> <Delay = 7.32>
ST_73 : Operation 374 [5/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 374 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 74 <SV = 23> <Delay = 7.32>
ST_74 : Operation 375 [4/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 375 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 75 <SV = 24> <Delay = 7.32>
ST_75 : Operation 376 [3/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 376 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 76 <SV = 25> <Delay = 7.32>
ST_76 : Operation 377 [2/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 377 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 77 <SV = 26> <Delay = 7.32>
ST_77 : Operation 378 [1/1] (5.54ns)   --->   "%tmp_26 = fpext float %Co_load to double" [svm.cpp:66]   --->   Operation 378 'fpext' 'tmp_26' <Predicate = true> <Delay = 5.54> <Core = "Float2Double">   --->   Core 108 'Float2Double' <Latency = 0> <II = 1> <Delay = 5.54> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_77 : Operation 379 [1/18] (7.32ns)   --->   "%tmp_29 = call double @llvm.exp.f64(double %tmp_28)" [svm.cpp:66]   --->   Operation 379 'dexp' 'tmp_29' <Predicate = true> <Delay = 7.32> <Core = "DExp">   --->   Core 122 'DExp' <Latency = 17> <II = 1> <Delay = 7.32> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 78 <SV = 27> <Delay = 7.78>
ST_78 : Operation 380 [6/6] (7.78ns)   --->   "%tmp_30 = fmul double %tmp_26, %tmp_29" [svm.cpp:66]   --->   Operation 380 'dmul' 'tmp_30' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 79 <SV = 28> <Delay = 7.78>
ST_79 : Operation 381 [5/6] (7.78ns)   --->   "%tmp_30 = fmul double %tmp_26, %tmp_29" [svm.cpp:66]   --->   Operation 381 'dmul' 'tmp_30' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 80 <SV = 29> <Delay = 7.78>
ST_80 : Operation 382 [4/6] (7.78ns)   --->   "%tmp_30 = fmul double %tmp_26, %tmp_29" [svm.cpp:66]   --->   Operation 382 'dmul' 'tmp_30' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 81 <SV = 30> <Delay = 7.78>
ST_81 : Operation 383 [3/6] (7.78ns)   --->   "%tmp_30 = fmul double %tmp_26, %tmp_29" [svm.cpp:66]   --->   Operation 383 'dmul' 'tmp_30' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 82 <SV = 31> <Delay = 7.78>
ST_82 : Operation 384 [2/6] (7.78ns)   --->   "%tmp_30 = fmul double %tmp_26, %tmp_29" [svm.cpp:66]   --->   Operation 384 'dmul' 'tmp_30' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 83 <SV = 32> <Delay = 7.78>
ST_83 : Operation 385 [1/6] (7.78ns)   --->   "%tmp_30 = fmul double %tmp_26, %tmp_29" [svm.cpp:66]   --->   Operation 385 'dmul' 'tmp_30' <Predicate = true> <Delay = 7.78> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 5> <II = 1> <Delay = 7.78> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 84 <SV = 33> <Delay = 8.23>
ST_84 : Operation 386 [5/5] (8.23ns)   --->   "%tmp_31 = fadd double %tmp_30, 0xC0068B43A0000000" [svm.cpp:66]   --->   Operation 386 'dadd' 'tmp_31' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 85 <SV = 34> <Delay = 8.23>
ST_85 : Operation 387 [4/5] (8.23ns)   --->   "%tmp_31 = fadd double %tmp_30, 0xC0068B43A0000000" [svm.cpp:66]   --->   Operation 387 'dadd' 'tmp_31' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 86 <SV = 35> <Delay = 8.23>
ST_86 : Operation 388 [3/5] (8.23ns)   --->   "%tmp_31 = fadd double %tmp_30, 0xC0068B43A0000000" [svm.cpp:66]   --->   Operation 388 'dadd' 'tmp_31' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 87 <SV = 36> <Delay = 8.23>
ST_87 : Operation 389 [2/5] (8.23ns)   --->   "%tmp_31 = fadd double %tmp_30, 0xC0068B43A0000000" [svm.cpp:66]   --->   Operation 389 'dadd' 'tmp_31' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 88 <SV = 37> <Delay = 8.23>
ST_88 : Operation 390 [1/5] (8.23ns)   --->   "%tmp_31 = fadd double %tmp_30, 0xC0068B43A0000000" [svm.cpp:66]   --->   Operation 390 'dadd' 'tmp_31' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 89 <SV = 38> <Delay = 8.23>
ST_89 : Operation 391 [5/5] (8.23ns)   --->   "%sum_1 = fadd double %sum, %tmp_31" [svm.cpp:66]   --->   Operation 391 'dadd' 'sum_1' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 90 <SV = 39> <Delay = 8.23>
ST_90 : Operation 392 [4/5] (8.23ns)   --->   "%sum_1 = fadd double %sum, %tmp_31" [svm.cpp:66]   --->   Operation 392 'dadd' 'sum_1' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 91 <SV = 40> <Delay = 8.23>
ST_91 : Operation 393 [3/5] (8.23ns)   --->   "%sum_1 = fadd double %sum, %tmp_31" [svm.cpp:66]   --->   Operation 393 'dadd' 'sum_1' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 92 <SV = 41> <Delay = 8.23>
ST_92 : Operation 394 [2/5] (8.23ns)   --->   "%sum_1 = fadd double %sum, %tmp_31" [svm.cpp:66]   --->   Operation 394 'dadd' 'sum_1' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 93 <SV = 42> <Delay = 8.23>
ST_93 : Operation 395 [1/5] (8.23ns)   --->   "%sum_1 = fadd double %sum, %tmp_31" [svm.cpp:66]   --->   Operation 395 'dadd' 'sum_1' <Predicate = true> <Delay = 8.23> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 8.23> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_93 : Operation 396 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([16 x i8]* @p_str, i32 %tmp_32) nounwind" [svm.cpp:67]   --->   Operation 396 'specregionend' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_93 : Operation 397 [1/1] (0.00ns)   --->   "br label %1" [svm.cpp:27]   --->   Operation 397 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('sum') with incoming values : ('sum', svm.cpp:66) [10]  (1.77 ns)

 <State 2>: 7.82ns
The critical path consists of the following:
	'phi' operation ('sum') with incoming values : ('sum', svm.cpp:66) [10]  (0 ns)
	'dcmp' operation ('tmp_35', svm.cpp:69) [161]  (6.82 ns)
	'and' operation ('tmp_36', svm.cpp:69) [162]  (0 ns)
	'select' operation ('storemerge_cast_cast', svm.cpp:69) [163]  (0.993 ns)

 <State 3>: 7.11ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', svm.cpp:32) [28]  (0 ns)
	'add' operation ('tmp_4', svm.cpp:43) [43]  (1.78 ns)
	'add' operation ('tmp_41', svm.cpp:43) [46]  (2.08 ns)
	'getelementptr' operation ('SupVec_addr_1', svm.cpp:43) [48]  (0 ns)
	'load' operation ('SupVec_load_1', svm.cpp:43) on array 'SupVec' [51]  (3.25 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'load' operation ('SupVec_load', svm.cpp:42) on array 'SupVec' [41]  (3.25 ns)

 <State 5>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif0', svm.cpp:42) [42]  (7.26 ns)

 <State 6>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif0', svm.cpp:42) [42]  (7.26 ns)

 <State 7>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif0', svm.cpp:42) [42]  (7.26 ns)

 <State 8>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif0', svm.cpp:42) [42]  (7.26 ns)

 <State 9>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif0', svm.cpp:42) [42]  (7.26 ns)

 <State 10>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif2', svm.cpp:44) [62]  (7.26 ns)

 <State 11>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif2', svm.cpp:44) [62]  (7.26 ns)

 <State 12>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif2', svm.cpp:44) [62]  (7.26 ns)

 <State 13>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif2', svm.cpp:44) [62]  (7.26 ns)

 <State 14>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif2', svm.cpp:44) [62]  (7.26 ns)

 <State 15>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif3', svm.cpp:45) [72]  (7.26 ns)

 <State 16>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif3', svm.cpp:45) [72]  (7.26 ns)

 <State 17>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif3', svm.cpp:45) [72]  (7.26 ns)

 <State 18>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif3', svm.cpp:45) [72]  (7.26 ns)

 <State 19>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif3', svm.cpp:45) [72]  (7.26 ns)

 <State 20>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif4', svm.cpp:46) [82]  (7.26 ns)

 <State 21>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif4', svm.cpp:46) [82]  (7.26 ns)

 <State 22>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif4', svm.cpp:46) [82]  (7.26 ns)

 <State 23>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif4', svm.cpp:46) [82]  (7.26 ns)

 <State 24>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif4', svm.cpp:46) [82]  (7.26 ns)

 <State 25>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif5', svm.cpp:47) [92]  (7.26 ns)

 <State 26>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif5', svm.cpp:47) [92]  (7.26 ns)

 <State 27>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif5', svm.cpp:47) [92]  (7.26 ns)

 <State 28>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif5', svm.cpp:47) [92]  (7.26 ns)

 <State 29>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif5', svm.cpp:47) [92]  (7.26 ns)

 <State 30>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif6', svm.cpp:48) [102]  (7.26 ns)

 <State 31>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif6', svm.cpp:48) [102]  (7.26 ns)

 <State 32>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif6', svm.cpp:48) [102]  (7.26 ns)

 <State 33>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif6', svm.cpp:48) [102]  (7.26 ns)

 <State 34>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif6', svm.cpp:48) [102]  (7.26 ns)

 <State 35>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif7', svm.cpp:49) [112]  (7.26 ns)

 <State 36>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif7', svm.cpp:49) [112]  (7.26 ns)

 <State 37>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif7', svm.cpp:49) [112]  (7.26 ns)

 <State 38>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif7', svm.cpp:49) [112]  (7.26 ns)

 <State 39>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif7', svm.cpp:49) [112]  (7.26 ns)

 <State 40>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif8', svm.cpp:50) [122]  (7.26 ns)

 <State 41>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif8', svm.cpp:50) [122]  (7.26 ns)

 <State 42>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif8', svm.cpp:50) [122]  (7.26 ns)

 <State 43>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif8', svm.cpp:50) [122]  (7.26 ns)

 <State 44>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('dif8', svm.cpp:50) [122]  (7.26 ns)

 <State 45>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_25', svm.cpp:62) [138]  (7.26 ns)

 <State 46>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_25', svm.cpp:62) [138]  (7.26 ns)

 <State 47>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_25', svm.cpp:62) [138]  (7.26 ns)

 <State 48>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_25', svm.cpp:62) [138]  (7.26 ns)

 <State 49>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('norm', svm.cpp:62) [139]  (7.26 ns)

 <State 50>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('norm', svm.cpp:62) [139]  (7.26 ns)

 <State 51>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('norm', svm.cpp:62) [139]  (7.26 ns)

 <State 52>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('norm', svm.cpp:62) [139]  (7.26 ns)

 <State 53>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('norm', svm.cpp:62) [139]  (7.26 ns)

 <State 54>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_28', svm.cpp:66) [147]  (7.79 ns)

 <State 55>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_28', svm.cpp:66) [147]  (7.79 ns)

 <State 56>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_28', svm.cpp:66) [147]  (7.79 ns)

 <State 57>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_28', svm.cpp:66) [147]  (7.79 ns)

 <State 58>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_28', svm.cpp:66) [147]  (7.79 ns)

 <State 59>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_28', svm.cpp:66) [147]  (7.79 ns)

 <State 60>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 61>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 62>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 63>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 64>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 65>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 66>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 67>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 68>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 69>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 70>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 71>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 72>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 73>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 74>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 75>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 76>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 77>: 7.32ns
The critical path consists of the following:
	'dexp' operation ('tmp_29', svm.cpp:66) [148]  (7.32 ns)

 <State 78>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_30', svm.cpp:66) [149]  (7.79 ns)

 <State 79>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_30', svm.cpp:66) [149]  (7.79 ns)

 <State 80>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_30', svm.cpp:66) [149]  (7.79 ns)

 <State 81>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_30', svm.cpp:66) [149]  (7.79 ns)

 <State 82>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_30', svm.cpp:66) [149]  (7.79 ns)

 <State 83>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_30', svm.cpp:66) [149]  (7.79 ns)

 <State 84>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('tmp_31', svm.cpp:66) [150]  (8.23 ns)

 <State 85>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('tmp_31', svm.cpp:66) [150]  (8.23 ns)

 <State 86>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('tmp_31', svm.cpp:66) [150]  (8.23 ns)

 <State 87>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('tmp_31', svm.cpp:66) [150]  (8.23 ns)

 <State 88>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('tmp_31', svm.cpp:66) [150]  (8.23 ns)

 <State 89>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('sum', svm.cpp:66) [151]  (8.23 ns)

 <State 90>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('sum', svm.cpp:66) [151]  (8.23 ns)

 <State 91>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('sum', svm.cpp:66) [151]  (8.23 ns)

 <State 92>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('sum', svm.cpp:66) [151]  (8.23 ns)

 <State 93>: 8.23ns
The critical path consists of the following:
	'dadd' operation ('sum', svm.cpp:66) [151]  (8.23 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
