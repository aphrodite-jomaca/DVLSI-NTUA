// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="svm_top,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.427200,HLS_SYN_LAT=175969,HLS_SYN_TPT=175970,HLS_SYN_MEM=228,HLS_SYN_DSP=162,HLS_SYN_FF=14979,HLS_SYN_LUT=24360,HLS_VERSION=2018_2}" *)

module svm_top (
        class_hw0,
        class_hw1,
        class_hw2,
        x0_0_address0,
        x0_0_ce0,
        x0_0_d0,
        x0_0_q0,
        x0_0_we0,
        x0_0_address1,
        x0_0_ce1,
        x0_0_d1,
        x0_0_q1,
        x0_0_we1,
        x0_1_address0,
        x0_1_ce0,
        x0_1_d0,
        x0_1_q0,
        x0_1_we0,
        x0_1_address1,
        x0_1_ce1,
        x0_1_d1,
        x0_1_q1,
        x0_1_we1,
        x0_2_address0,
        x0_2_ce0,
        x0_2_d0,
        x0_2_q0,
        x0_2_we0,
        x0_2_address1,
        x0_2_ce1,
        x0_2_d1,
        x0_2_q1,
        x0_2_we1,
        x0_3_address0,
        x0_3_ce0,
        x0_3_d0,
        x0_3_q0,
        x0_3_we0,
        x0_3_address1,
        x0_3_ce1,
        x0_3_d1,
        x0_3_q1,
        x0_3_we1,
        x0_4_address0,
        x0_4_ce0,
        x0_4_d0,
        x0_4_q0,
        x0_4_we0,
        x0_4_address1,
        x0_4_ce1,
        x0_4_d1,
        x0_4_q1,
        x0_4_we1,
        x0_5_address0,
        x0_5_ce0,
        x0_5_d0,
        x0_5_q0,
        x0_5_we0,
        x0_5_address1,
        x0_5_ce1,
        x0_5_d1,
        x0_5_q1,
        x0_5_we1,
        x0_6_address0,
        x0_6_ce0,
        x0_6_d0,
        x0_6_q0,
        x0_6_we0,
        x0_6_address1,
        x0_6_ce1,
        x0_6_d1,
        x0_6_q1,
        x0_6_we1,
        x0_7_address0,
        x0_7_ce0,
        x0_7_d0,
        x0_7_q0,
        x0_7_we0,
        x0_7_address1,
        x0_7_ce1,
        x0_7_d1,
        x0_7_q1,
        x0_7_we1,
        x0_8_address0,
        x0_8_ce0,
        x0_8_d0,
        x0_8_q0,
        x0_8_we0,
        x0_8_address1,
        x0_8_ce1,
        x0_8_d1,
        x0_8_q1,
        x0_8_we1,
        x1_0_address0,
        x1_0_ce0,
        x1_0_d0,
        x1_0_q0,
        x1_0_we0,
        x1_0_address1,
        x1_0_ce1,
        x1_0_d1,
        x1_0_q1,
        x1_0_we1,
        x1_1_address0,
        x1_1_ce0,
        x1_1_d0,
        x1_1_q0,
        x1_1_we0,
        x1_1_address1,
        x1_1_ce1,
        x1_1_d1,
        x1_1_q1,
        x1_1_we1,
        x1_2_address0,
        x1_2_ce0,
        x1_2_d0,
        x1_2_q0,
        x1_2_we0,
        x1_2_address1,
        x1_2_ce1,
        x1_2_d1,
        x1_2_q1,
        x1_2_we1,
        x1_3_address0,
        x1_3_ce0,
        x1_3_d0,
        x1_3_q0,
        x1_3_we0,
        x1_3_address1,
        x1_3_ce1,
        x1_3_d1,
        x1_3_q1,
        x1_3_we1,
        x1_4_address0,
        x1_4_ce0,
        x1_4_d0,
        x1_4_q0,
        x1_4_we0,
        x1_4_address1,
        x1_4_ce1,
        x1_4_d1,
        x1_4_q1,
        x1_4_we1,
        x1_5_address0,
        x1_5_ce0,
        x1_5_d0,
        x1_5_q0,
        x1_5_we0,
        x1_5_address1,
        x1_5_ce1,
        x1_5_d1,
        x1_5_q1,
        x1_5_we1,
        x1_6_address0,
        x1_6_ce0,
        x1_6_d0,
        x1_6_q0,
        x1_6_we0,
        x1_6_address1,
        x1_6_ce1,
        x1_6_d1,
        x1_6_q1,
        x1_6_we1,
        x1_7_address0,
        x1_7_ce0,
        x1_7_d0,
        x1_7_q0,
        x1_7_we0,
        x1_7_address1,
        x1_7_ce1,
        x1_7_d1,
        x1_7_q1,
        x1_7_we1,
        x1_8_address0,
        x1_8_ce0,
        x1_8_d0,
        x1_8_q0,
        x1_8_we0,
        x1_8_address1,
        x1_8_ce1,
        x1_8_d1,
        x1_8_q1,
        x1_8_we1,
        x2_0_address0,
        x2_0_ce0,
        x2_0_d0,
        x2_0_q0,
        x2_0_we0,
        x2_0_address1,
        x2_0_ce1,
        x2_0_d1,
        x2_0_q1,
        x2_0_we1,
        x2_1_address0,
        x2_1_ce0,
        x2_1_d0,
        x2_1_q0,
        x2_1_we0,
        x2_1_address1,
        x2_1_ce1,
        x2_1_d1,
        x2_1_q1,
        x2_1_we1,
        x2_2_address0,
        x2_2_ce0,
        x2_2_d0,
        x2_2_q0,
        x2_2_we0,
        x2_2_address1,
        x2_2_ce1,
        x2_2_d1,
        x2_2_q1,
        x2_2_we1,
        x2_3_address0,
        x2_3_ce0,
        x2_3_d0,
        x2_3_q0,
        x2_3_we0,
        x2_3_address1,
        x2_3_ce1,
        x2_3_d1,
        x2_3_q1,
        x2_3_we1,
        x2_4_address0,
        x2_4_ce0,
        x2_4_d0,
        x2_4_q0,
        x2_4_we0,
        x2_4_address1,
        x2_4_ce1,
        x2_4_d1,
        x2_4_q1,
        x2_4_we1,
        x2_5_address0,
        x2_5_ce0,
        x2_5_d0,
        x2_5_q0,
        x2_5_we0,
        x2_5_address1,
        x2_5_ce1,
        x2_5_d1,
        x2_5_q1,
        x2_5_we1,
        x2_6_address0,
        x2_6_ce0,
        x2_6_d0,
        x2_6_q0,
        x2_6_we0,
        x2_6_address1,
        x2_6_ce1,
        x2_6_d1,
        x2_6_q1,
        x2_6_we1,
        x2_7_address0,
        x2_7_ce0,
        x2_7_d0,
        x2_7_q0,
        x2_7_we0,
        x2_7_address1,
        x2_7_ce1,
        x2_7_d1,
        x2_7_q1,
        x2_7_we1,
        x2_8_address0,
        x2_8_ce0,
        x2_8_d0,
        x2_8_q0,
        x2_8_we0,
        x2_8_address1,
        x2_8_ce1,
        x2_8_d1,
        x2_8_q1,
        x2_8_we1,
        ap_clk,
        ap_rst,
        class_hw0_ap_vld,
        ap_done,
        class_hw1_ap_vld,
        class_hw2_ap_vld,
        ap_start,
        ap_ready,
        ap_idle
);


output  [15:0] class_hw0;
output  [15:0] class_hw1;
output  [15:0] class_hw2;
output  [0:0] x0_0_address0;
output   x0_0_ce0;
output  [31:0] x0_0_d0;
input  [31:0] x0_0_q0;
output   x0_0_we0;
output  [0:0] x0_0_address1;
output   x0_0_ce1;
output  [31:0] x0_0_d1;
input  [31:0] x0_0_q1;
output   x0_0_we1;
output  [0:0] x0_1_address0;
output   x0_1_ce0;
output  [31:0] x0_1_d0;
input  [31:0] x0_1_q0;
output   x0_1_we0;
output  [0:0] x0_1_address1;
output   x0_1_ce1;
output  [31:0] x0_1_d1;
input  [31:0] x0_1_q1;
output   x0_1_we1;
output  [0:0] x0_2_address0;
output   x0_2_ce0;
output  [31:0] x0_2_d0;
input  [31:0] x0_2_q0;
output   x0_2_we0;
output  [0:0] x0_2_address1;
output   x0_2_ce1;
output  [31:0] x0_2_d1;
input  [31:0] x0_2_q1;
output   x0_2_we1;
output  [0:0] x0_3_address0;
output   x0_3_ce0;
output  [31:0] x0_3_d0;
input  [31:0] x0_3_q0;
output   x0_3_we0;
output  [0:0] x0_3_address1;
output   x0_3_ce1;
output  [31:0] x0_3_d1;
input  [31:0] x0_3_q1;
output   x0_3_we1;
output  [0:0] x0_4_address0;
output   x0_4_ce0;
output  [31:0] x0_4_d0;
input  [31:0] x0_4_q0;
output   x0_4_we0;
output  [0:0] x0_4_address1;
output   x0_4_ce1;
output  [31:0] x0_4_d1;
input  [31:0] x0_4_q1;
output   x0_4_we1;
output  [0:0] x0_5_address0;
output   x0_5_ce0;
output  [31:0] x0_5_d0;
input  [31:0] x0_5_q0;
output   x0_5_we0;
output  [0:0] x0_5_address1;
output   x0_5_ce1;
output  [31:0] x0_5_d1;
input  [31:0] x0_5_q1;
output   x0_5_we1;
output  [0:0] x0_6_address0;
output   x0_6_ce0;
output  [31:0] x0_6_d0;
input  [31:0] x0_6_q0;
output   x0_6_we0;
output  [0:0] x0_6_address1;
output   x0_6_ce1;
output  [31:0] x0_6_d1;
input  [31:0] x0_6_q1;
output   x0_6_we1;
output  [0:0] x0_7_address0;
output   x0_7_ce0;
output  [31:0] x0_7_d0;
input  [31:0] x0_7_q0;
output   x0_7_we0;
output  [0:0] x0_7_address1;
output   x0_7_ce1;
output  [31:0] x0_7_d1;
input  [31:0] x0_7_q1;
output   x0_7_we1;
output  [0:0] x0_8_address0;
output   x0_8_ce0;
output  [31:0] x0_8_d0;
input  [31:0] x0_8_q0;
output   x0_8_we0;
output  [0:0] x0_8_address1;
output   x0_8_ce1;
output  [31:0] x0_8_d1;
input  [31:0] x0_8_q1;
output   x0_8_we1;
output  [0:0] x1_0_address0;
output   x1_0_ce0;
output  [31:0] x1_0_d0;
input  [31:0] x1_0_q0;
output   x1_0_we0;
output  [0:0] x1_0_address1;
output   x1_0_ce1;
output  [31:0] x1_0_d1;
input  [31:0] x1_0_q1;
output   x1_0_we1;
output  [0:0] x1_1_address0;
output   x1_1_ce0;
output  [31:0] x1_1_d0;
input  [31:0] x1_1_q0;
output   x1_1_we0;
output  [0:0] x1_1_address1;
output   x1_1_ce1;
output  [31:0] x1_1_d1;
input  [31:0] x1_1_q1;
output   x1_1_we1;
output  [0:0] x1_2_address0;
output   x1_2_ce0;
output  [31:0] x1_2_d0;
input  [31:0] x1_2_q0;
output   x1_2_we0;
output  [0:0] x1_2_address1;
output   x1_2_ce1;
output  [31:0] x1_2_d1;
input  [31:0] x1_2_q1;
output   x1_2_we1;
output  [0:0] x1_3_address0;
output   x1_3_ce0;
output  [31:0] x1_3_d0;
input  [31:0] x1_3_q0;
output   x1_3_we0;
output  [0:0] x1_3_address1;
output   x1_3_ce1;
output  [31:0] x1_3_d1;
input  [31:0] x1_3_q1;
output   x1_3_we1;
output  [0:0] x1_4_address0;
output   x1_4_ce0;
output  [31:0] x1_4_d0;
input  [31:0] x1_4_q0;
output   x1_4_we0;
output  [0:0] x1_4_address1;
output   x1_4_ce1;
output  [31:0] x1_4_d1;
input  [31:0] x1_4_q1;
output   x1_4_we1;
output  [0:0] x1_5_address0;
output   x1_5_ce0;
output  [31:0] x1_5_d0;
input  [31:0] x1_5_q0;
output   x1_5_we0;
output  [0:0] x1_5_address1;
output   x1_5_ce1;
output  [31:0] x1_5_d1;
input  [31:0] x1_5_q1;
output   x1_5_we1;
output  [0:0] x1_6_address0;
output   x1_6_ce0;
output  [31:0] x1_6_d0;
input  [31:0] x1_6_q0;
output   x1_6_we0;
output  [0:0] x1_6_address1;
output   x1_6_ce1;
output  [31:0] x1_6_d1;
input  [31:0] x1_6_q1;
output   x1_6_we1;
output  [0:0] x1_7_address0;
output   x1_7_ce0;
output  [31:0] x1_7_d0;
input  [31:0] x1_7_q0;
output   x1_7_we0;
output  [0:0] x1_7_address1;
output   x1_7_ce1;
output  [31:0] x1_7_d1;
input  [31:0] x1_7_q1;
output   x1_7_we1;
output  [0:0] x1_8_address0;
output   x1_8_ce0;
output  [31:0] x1_8_d0;
input  [31:0] x1_8_q0;
output   x1_8_we0;
output  [0:0] x1_8_address1;
output   x1_8_ce1;
output  [31:0] x1_8_d1;
input  [31:0] x1_8_q1;
output   x1_8_we1;
output  [0:0] x2_0_address0;
output   x2_0_ce0;
output  [31:0] x2_0_d0;
input  [31:0] x2_0_q0;
output   x2_0_we0;
output  [0:0] x2_0_address1;
output   x2_0_ce1;
output  [31:0] x2_0_d1;
input  [31:0] x2_0_q1;
output   x2_0_we1;
output  [0:0] x2_1_address0;
output   x2_1_ce0;
output  [31:0] x2_1_d0;
input  [31:0] x2_1_q0;
output   x2_1_we0;
output  [0:0] x2_1_address1;
output   x2_1_ce1;
output  [31:0] x2_1_d1;
input  [31:0] x2_1_q1;
output   x2_1_we1;
output  [0:0] x2_2_address0;
output   x2_2_ce0;
output  [31:0] x2_2_d0;
input  [31:0] x2_2_q0;
output   x2_2_we0;
output  [0:0] x2_2_address1;
output   x2_2_ce1;
output  [31:0] x2_2_d1;
input  [31:0] x2_2_q1;
output   x2_2_we1;
output  [0:0] x2_3_address0;
output   x2_3_ce0;
output  [31:0] x2_3_d0;
input  [31:0] x2_3_q0;
output   x2_3_we0;
output  [0:0] x2_3_address1;
output   x2_3_ce1;
output  [31:0] x2_3_d1;
input  [31:0] x2_3_q1;
output   x2_3_we1;
output  [0:0] x2_4_address0;
output   x2_4_ce0;
output  [31:0] x2_4_d0;
input  [31:0] x2_4_q0;
output   x2_4_we0;
output  [0:0] x2_4_address1;
output   x2_4_ce1;
output  [31:0] x2_4_d1;
input  [31:0] x2_4_q1;
output   x2_4_we1;
output  [0:0] x2_5_address0;
output   x2_5_ce0;
output  [31:0] x2_5_d0;
input  [31:0] x2_5_q0;
output   x2_5_we0;
output  [0:0] x2_5_address1;
output   x2_5_ce1;
output  [31:0] x2_5_d1;
input  [31:0] x2_5_q1;
output   x2_5_we1;
output  [0:0] x2_6_address0;
output   x2_6_ce0;
output  [31:0] x2_6_d0;
input  [31:0] x2_6_q0;
output   x2_6_we0;
output  [0:0] x2_6_address1;
output   x2_6_ce1;
output  [31:0] x2_6_d1;
input  [31:0] x2_6_q1;
output   x2_6_we1;
output  [0:0] x2_7_address0;
output   x2_7_ce0;
output  [31:0] x2_7_d0;
input  [31:0] x2_7_q0;
output   x2_7_we0;
output  [0:0] x2_7_address1;
output   x2_7_ce1;
output  [31:0] x2_7_d1;
input  [31:0] x2_7_q1;
output   x2_7_we1;
output  [0:0] x2_8_address0;
output   x2_8_ce0;
output  [31:0] x2_8_d0;
input  [31:0] x2_8_q0;
output   x2_8_we0;
output  [0:0] x2_8_address1;
output   x2_8_ce1;
output  [31:0] x2_8_d1;
input  [31:0] x2_8_q1;
output   x2_8_we1;
input   ap_clk;
input   ap_rst;
output   class_hw0_ap_vld;
output   ap_done;
output   class_hw1_ap_vld;
output   class_hw2_ap_vld;
input   ap_start;
output   ap_ready;
output   ap_idle;

wire    svm5_U0_ap_start;
wire    svm5_U0_ap_done;
wire    svm5_U0_ap_continue;
wire    svm5_U0_ap_idle;
wire    svm5_U0_ap_ready;
wire   [15:0] svm5_U0_class_hw;
wire    svm5_U0_class_hw_ap_vld;
wire   [0:0] svm5_U0_x_address0;
wire    svm5_U0_x_ce0;
wire   [0:0] svm5_U0_x1_address0;
wire    svm5_U0_x1_ce0;
wire   [0:0] svm5_U0_x2_address0;
wire    svm5_U0_x2_ce0;
wire   [0:0] svm5_U0_x3_address0;
wire    svm5_U0_x3_ce0;
wire   [0:0] svm5_U0_x4_address0;
wire    svm5_U0_x4_ce0;
wire   [0:0] svm5_U0_x5_address0;
wire    svm5_U0_x5_ce0;
wire   [0:0] svm5_U0_x6_address0;
wire    svm5_U0_x6_ce0;
wire   [0:0] svm5_U0_x7_address0;
wire    svm5_U0_x7_ce0;
wire   [0:0] svm5_U0_x8_address0;
wire    svm5_U0_x8_ce0;
wire    ap_sync_continue;
wire    svm6_U0_ap_start;
wire    svm6_U0_ap_done;
wire    svm6_U0_ap_continue;
wire    svm6_U0_ap_idle;
wire    svm6_U0_ap_ready;
wire   [15:0] svm6_U0_class_hw;
wire    svm6_U0_class_hw_ap_vld;
wire   [0:0] svm6_U0_x_address0;
wire    svm6_U0_x_ce0;
wire   [0:0] svm6_U0_x1_address0;
wire    svm6_U0_x1_ce0;
wire   [0:0] svm6_U0_x2_address0;
wire    svm6_U0_x2_ce0;
wire   [0:0] svm6_U0_x3_address0;
wire    svm6_U0_x3_ce0;
wire   [0:0] svm6_U0_x4_address0;
wire    svm6_U0_x4_ce0;
wire   [0:0] svm6_U0_x5_address0;
wire    svm6_U0_x5_ce0;
wire   [0:0] svm6_U0_x6_address0;
wire    svm6_U0_x6_ce0;
wire   [0:0] svm6_U0_x7_address0;
wire    svm6_U0_x7_ce0;
wire   [0:0] svm6_U0_x8_address0;
wire    svm6_U0_x8_ce0;
wire    svm_U0_ap_start;
wire    svm_U0_ap_done;
wire    svm_U0_ap_continue;
wire    svm_U0_ap_idle;
wire    svm_U0_ap_ready;
wire   [15:0] svm_U0_class_hw;
wire    svm_U0_class_hw_ap_vld;
wire   [0:0] svm_U0_x_0_address0;
wire    svm_U0_x_0_ce0;
wire   [0:0] svm_U0_x_1_address0;
wire    svm_U0_x_1_ce0;
wire   [0:0] svm_U0_x_2_address0;
wire    svm_U0_x_2_ce0;
wire   [0:0] svm_U0_x_3_address0;
wire    svm_U0_x_3_ce0;
wire   [0:0] svm_U0_x_4_address0;
wire    svm_U0_x_4_ce0;
wire   [0:0] svm_U0_x_5_address0;
wire    svm_U0_x_5_ce0;
wire   [0:0] svm_U0_x_6_address0;
wire    svm_U0_x_6_ce0;
wire   [0:0] svm_U0_x_7_address0;
wire    svm_U0_x_7_ce0;
wire   [0:0] svm_U0_x_8_address0;
wire    svm_U0_x_8_ce0;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_svm5_U0_ap_ready;
wire    ap_sync_svm5_U0_ap_ready;
reg   [1:0] svm5_U0_ap_ready_count;
reg    ap_sync_reg_svm6_U0_ap_ready;
wire    ap_sync_svm6_U0_ap_ready;
reg   [1:0] svm6_U0_ap_ready_count;
reg    ap_sync_reg_svm_U0_ap_ready;
wire    ap_sync_svm_U0_ap_ready;
reg   [1:0] svm_U0_ap_ready_count;
wire    svm5_U0_start_full_n;
wire    svm5_U0_start_write;
wire    svm6_U0_start_full_n;
wire    svm6_U0_start_write;
wire    svm_U0_start_full_n;
wire    svm_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_svm5_U0_ap_ready = 1'b0;
#0 svm5_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_svm6_U0_ap_ready = 1'b0;
#0 svm6_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_svm_U0_ap_ready = 1'b0;
#0 svm_U0_ap_ready_count = 2'd0;
end

svm5 svm5_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(svm5_U0_ap_start),
    .ap_done(svm5_U0_ap_done),
    .ap_continue(svm5_U0_ap_continue),
    .ap_idle(svm5_U0_ap_idle),
    .ap_ready(svm5_U0_ap_ready),
    .class_hw(svm5_U0_class_hw),
    .class_hw_ap_vld(svm5_U0_class_hw_ap_vld),
    .x_address0(svm5_U0_x_address0),
    .x_ce0(svm5_U0_x_ce0),
    .x_q0(x0_0_q0),
    .x1_address0(svm5_U0_x1_address0),
    .x1_ce0(svm5_U0_x1_ce0),
    .x1_q0(x0_1_q0),
    .x2_address0(svm5_U0_x2_address0),
    .x2_ce0(svm5_U0_x2_ce0),
    .x2_q0(x0_2_q0),
    .x3_address0(svm5_U0_x3_address0),
    .x3_ce0(svm5_U0_x3_ce0),
    .x3_q0(x0_3_q0),
    .x4_address0(svm5_U0_x4_address0),
    .x4_ce0(svm5_U0_x4_ce0),
    .x4_q0(x0_4_q0),
    .x5_address0(svm5_U0_x5_address0),
    .x5_ce0(svm5_U0_x5_ce0),
    .x5_q0(x0_5_q0),
    .x6_address0(svm5_U0_x6_address0),
    .x6_ce0(svm5_U0_x6_ce0),
    .x6_q0(x0_6_q0),
    .x7_address0(svm5_U0_x7_address0),
    .x7_ce0(svm5_U0_x7_ce0),
    .x7_q0(x0_7_q0),
    .x8_address0(svm5_U0_x8_address0),
    .x8_ce0(svm5_U0_x8_ce0),
    .x8_q0(x0_8_q0)
);

svm6 svm6_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(svm6_U0_ap_start),
    .ap_done(svm6_U0_ap_done),
    .ap_continue(svm6_U0_ap_continue),
    .ap_idle(svm6_U0_ap_idle),
    .ap_ready(svm6_U0_ap_ready),
    .class_hw(svm6_U0_class_hw),
    .class_hw_ap_vld(svm6_U0_class_hw_ap_vld),
    .x_address0(svm6_U0_x_address0),
    .x_ce0(svm6_U0_x_ce0),
    .x_q0(x1_0_q0),
    .x1_address0(svm6_U0_x1_address0),
    .x1_ce0(svm6_U0_x1_ce0),
    .x1_q0(x1_1_q0),
    .x2_address0(svm6_U0_x2_address0),
    .x2_ce0(svm6_U0_x2_ce0),
    .x2_q0(x1_2_q0),
    .x3_address0(svm6_U0_x3_address0),
    .x3_ce0(svm6_U0_x3_ce0),
    .x3_q0(x1_3_q0),
    .x4_address0(svm6_U0_x4_address0),
    .x4_ce0(svm6_U0_x4_ce0),
    .x4_q0(x1_4_q0),
    .x5_address0(svm6_U0_x5_address0),
    .x5_ce0(svm6_U0_x5_ce0),
    .x5_q0(x1_5_q0),
    .x6_address0(svm6_U0_x6_address0),
    .x6_ce0(svm6_U0_x6_ce0),
    .x6_q0(x1_6_q0),
    .x7_address0(svm6_U0_x7_address0),
    .x7_ce0(svm6_U0_x7_ce0),
    .x7_q0(x1_7_q0),
    .x8_address0(svm6_U0_x8_address0),
    .x8_ce0(svm6_U0_x8_ce0),
    .x8_q0(x1_8_q0)
);

svm svm_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(svm_U0_ap_start),
    .ap_done(svm_U0_ap_done),
    .ap_continue(svm_U0_ap_continue),
    .ap_idle(svm_U0_ap_idle),
    .ap_ready(svm_U0_ap_ready),
    .class_hw(svm_U0_class_hw),
    .class_hw_ap_vld(svm_U0_class_hw_ap_vld),
    .x_0_address0(svm_U0_x_0_address0),
    .x_0_ce0(svm_U0_x_0_ce0),
    .x_0_q0(x2_0_q0),
    .x_1_address0(svm_U0_x_1_address0),
    .x_1_ce0(svm_U0_x_1_ce0),
    .x_1_q0(x2_1_q0),
    .x_2_address0(svm_U0_x_2_address0),
    .x_2_ce0(svm_U0_x_2_ce0),
    .x_2_q0(x2_2_q0),
    .x_3_address0(svm_U0_x_3_address0),
    .x_3_ce0(svm_U0_x_3_ce0),
    .x_3_q0(x2_3_q0),
    .x_4_address0(svm_U0_x_4_address0),
    .x_4_ce0(svm_U0_x_4_ce0),
    .x_4_q0(x2_4_q0),
    .x_5_address0(svm_U0_x_5_address0),
    .x_5_ce0(svm_U0_x_5_ce0),
    .x_5_q0(x2_5_q0),
    .x_6_address0(svm_U0_x_6_address0),
    .x_6_ce0(svm_U0_x_6_ce0),
    .x_6_q0(x2_6_q0),
    .x_7_address0(svm_U0_x_7_address0),
    .x_7_ce0(svm_U0_x_7_ce0),
    .x_7_q0(x2_7_q0),
    .x_8_address0(svm_U0_x_8_address0),
    .x_8_ce0(svm_U0_x_8_ce0),
    .x_8_q0(x2_8_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_svm5_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_svm5_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_svm5_U0_ap_ready <= ap_sync_svm5_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_svm6_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_svm6_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_svm6_U0_ap_ready <= ap_sync_svm6_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_svm_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_svm_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_svm_U0_ap_ready <= ap_sync_svm_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((svm5_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        svm5_U0_ap_ready_count <= (svm5_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (svm5_U0_ap_ready == 1'b1))) begin
        svm5_U0_ap_ready_count <= (svm5_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((svm6_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        svm6_U0_ap_ready_count <= (svm6_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (svm6_U0_ap_ready == 1'b1))) begin
        svm6_U0_ap_ready_count <= (svm6_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((svm_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        svm_U0_ap_ready_count <= (svm_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (svm_U0_ap_ready == 1'b1))) begin
        svm_U0_ap_ready_count <= (svm_U0_ap_ready_count + 2'd1);
    end
end

assign ap_done = ap_sync_done;

assign ap_idle = (svm_U0_ap_idle & svm6_U0_ap_idle & svm5_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_continue = ap_sync_done;

assign ap_sync_done = (svm_U0_ap_done & svm6_U0_ap_done & svm5_U0_ap_done);

assign ap_sync_ready = (ap_sync_svm_U0_ap_ready & ap_sync_svm6_U0_ap_ready & ap_sync_svm5_U0_ap_ready);

assign ap_sync_svm5_U0_ap_ready = (svm5_U0_ap_ready | ap_sync_reg_svm5_U0_ap_ready);

assign ap_sync_svm6_U0_ap_ready = (svm6_U0_ap_ready | ap_sync_reg_svm6_U0_ap_ready);

assign ap_sync_svm_U0_ap_ready = (svm_U0_ap_ready | ap_sync_reg_svm_U0_ap_ready);

assign class_hw0 = svm5_U0_class_hw;

assign class_hw0_ap_vld = svm5_U0_class_hw_ap_vld;

assign class_hw1 = svm6_U0_class_hw;

assign class_hw1_ap_vld = svm6_U0_class_hw_ap_vld;

assign class_hw2 = svm_U0_class_hw;

assign class_hw2_ap_vld = svm_U0_class_hw_ap_vld;

assign svm5_U0_ap_continue = ap_sync_done;

assign svm5_U0_ap_start = ((ap_sync_reg_svm5_U0_ap_ready ^ 1'b1) & ap_start);

assign svm5_U0_start_full_n = 1'b1;

assign svm5_U0_start_write = 1'b0;

assign svm6_U0_ap_continue = ap_sync_done;

assign svm6_U0_ap_start = ((ap_sync_reg_svm6_U0_ap_ready ^ 1'b1) & ap_start);

assign svm6_U0_start_full_n = 1'b1;

assign svm6_U0_start_write = 1'b0;

assign svm_U0_ap_continue = ap_sync_done;

assign svm_U0_ap_start = ((ap_sync_reg_svm_U0_ap_ready ^ 1'b1) & ap_start);

assign svm_U0_start_full_n = 1'b1;

assign svm_U0_start_write = 1'b0;

assign x0_0_address0 = svm5_U0_x_address0;

assign x0_0_address1 = 1'd0;

assign x0_0_ce0 = svm5_U0_x_ce0;

assign x0_0_ce1 = 1'b0;

assign x0_0_d0 = 32'd0;

assign x0_0_d1 = 32'd0;

assign x0_0_we0 = 1'b0;

assign x0_0_we1 = 1'b0;

assign x0_1_address0 = svm5_U0_x1_address0;

assign x0_1_address1 = 1'd0;

assign x0_1_ce0 = svm5_U0_x1_ce0;

assign x0_1_ce1 = 1'b0;

assign x0_1_d0 = 32'd0;

assign x0_1_d1 = 32'd0;

assign x0_1_we0 = 1'b0;

assign x0_1_we1 = 1'b0;

assign x0_2_address0 = svm5_U0_x2_address0;

assign x0_2_address1 = 1'd0;

assign x0_2_ce0 = svm5_U0_x2_ce0;

assign x0_2_ce1 = 1'b0;

assign x0_2_d0 = 32'd0;

assign x0_2_d1 = 32'd0;

assign x0_2_we0 = 1'b0;

assign x0_2_we1 = 1'b0;

assign x0_3_address0 = svm5_U0_x3_address0;

assign x0_3_address1 = 1'd0;

assign x0_3_ce0 = svm5_U0_x3_ce0;

assign x0_3_ce1 = 1'b0;

assign x0_3_d0 = 32'd0;

assign x0_3_d1 = 32'd0;

assign x0_3_we0 = 1'b0;

assign x0_3_we1 = 1'b0;

assign x0_4_address0 = svm5_U0_x4_address0;

assign x0_4_address1 = 1'd0;

assign x0_4_ce0 = svm5_U0_x4_ce0;

assign x0_4_ce1 = 1'b0;

assign x0_4_d0 = 32'd0;

assign x0_4_d1 = 32'd0;

assign x0_4_we0 = 1'b0;

assign x0_4_we1 = 1'b0;

assign x0_5_address0 = svm5_U0_x5_address0;

assign x0_5_address1 = 1'd0;

assign x0_5_ce0 = svm5_U0_x5_ce0;

assign x0_5_ce1 = 1'b0;

assign x0_5_d0 = 32'd0;

assign x0_5_d1 = 32'd0;

assign x0_5_we0 = 1'b0;

assign x0_5_we1 = 1'b0;

assign x0_6_address0 = svm5_U0_x6_address0;

assign x0_6_address1 = 1'd0;

assign x0_6_ce0 = svm5_U0_x6_ce0;

assign x0_6_ce1 = 1'b0;

assign x0_6_d0 = 32'd0;

assign x0_6_d1 = 32'd0;

assign x0_6_we0 = 1'b0;

assign x0_6_we1 = 1'b0;

assign x0_7_address0 = svm5_U0_x7_address0;

assign x0_7_address1 = 1'd0;

assign x0_7_ce0 = svm5_U0_x7_ce0;

assign x0_7_ce1 = 1'b0;

assign x0_7_d0 = 32'd0;

assign x0_7_d1 = 32'd0;

assign x0_7_we0 = 1'b0;

assign x0_7_we1 = 1'b0;

assign x0_8_address0 = svm5_U0_x8_address0;

assign x0_8_address1 = 1'd0;

assign x0_8_ce0 = svm5_U0_x8_ce0;

assign x0_8_ce1 = 1'b0;

assign x0_8_d0 = 32'd0;

assign x0_8_d1 = 32'd0;

assign x0_8_we0 = 1'b0;

assign x0_8_we1 = 1'b0;

assign x1_0_address0 = svm6_U0_x_address0;

assign x1_0_address1 = 1'd0;

assign x1_0_ce0 = svm6_U0_x_ce0;

assign x1_0_ce1 = 1'b0;

assign x1_0_d0 = 32'd0;

assign x1_0_d1 = 32'd0;

assign x1_0_we0 = 1'b0;

assign x1_0_we1 = 1'b0;

assign x1_1_address0 = svm6_U0_x1_address0;

assign x1_1_address1 = 1'd0;

assign x1_1_ce0 = svm6_U0_x1_ce0;

assign x1_1_ce1 = 1'b0;

assign x1_1_d0 = 32'd0;

assign x1_1_d1 = 32'd0;

assign x1_1_we0 = 1'b0;

assign x1_1_we1 = 1'b0;

assign x1_2_address0 = svm6_U0_x2_address0;

assign x1_2_address1 = 1'd0;

assign x1_2_ce0 = svm6_U0_x2_ce0;

assign x1_2_ce1 = 1'b0;

assign x1_2_d0 = 32'd0;

assign x1_2_d1 = 32'd0;

assign x1_2_we0 = 1'b0;

assign x1_2_we1 = 1'b0;

assign x1_3_address0 = svm6_U0_x3_address0;

assign x1_3_address1 = 1'd0;

assign x1_3_ce0 = svm6_U0_x3_ce0;

assign x1_3_ce1 = 1'b0;

assign x1_3_d0 = 32'd0;

assign x1_3_d1 = 32'd0;

assign x1_3_we0 = 1'b0;

assign x1_3_we1 = 1'b0;

assign x1_4_address0 = svm6_U0_x4_address0;

assign x1_4_address1 = 1'd0;

assign x1_4_ce0 = svm6_U0_x4_ce0;

assign x1_4_ce1 = 1'b0;

assign x1_4_d0 = 32'd0;

assign x1_4_d1 = 32'd0;

assign x1_4_we0 = 1'b0;

assign x1_4_we1 = 1'b0;

assign x1_5_address0 = svm6_U0_x5_address0;

assign x1_5_address1 = 1'd0;

assign x1_5_ce0 = svm6_U0_x5_ce0;

assign x1_5_ce1 = 1'b0;

assign x1_5_d0 = 32'd0;

assign x1_5_d1 = 32'd0;

assign x1_5_we0 = 1'b0;

assign x1_5_we1 = 1'b0;

assign x1_6_address0 = svm6_U0_x6_address0;

assign x1_6_address1 = 1'd0;

assign x1_6_ce0 = svm6_U0_x6_ce0;

assign x1_6_ce1 = 1'b0;

assign x1_6_d0 = 32'd0;

assign x1_6_d1 = 32'd0;

assign x1_6_we0 = 1'b0;

assign x1_6_we1 = 1'b0;

assign x1_7_address0 = svm6_U0_x7_address0;

assign x1_7_address1 = 1'd0;

assign x1_7_ce0 = svm6_U0_x7_ce0;

assign x1_7_ce1 = 1'b0;

assign x1_7_d0 = 32'd0;

assign x1_7_d1 = 32'd0;

assign x1_7_we0 = 1'b0;

assign x1_7_we1 = 1'b0;

assign x1_8_address0 = svm6_U0_x8_address0;

assign x1_8_address1 = 1'd0;

assign x1_8_ce0 = svm6_U0_x8_ce0;

assign x1_8_ce1 = 1'b0;

assign x1_8_d0 = 32'd0;

assign x1_8_d1 = 32'd0;

assign x1_8_we0 = 1'b0;

assign x1_8_we1 = 1'b0;

assign x2_0_address0 = svm_U0_x_0_address0;

assign x2_0_address1 = 1'd0;

assign x2_0_ce0 = svm_U0_x_0_ce0;

assign x2_0_ce1 = 1'b0;

assign x2_0_d0 = 32'd0;

assign x2_0_d1 = 32'd0;

assign x2_0_we0 = 1'b0;

assign x2_0_we1 = 1'b0;

assign x2_1_address0 = svm_U0_x_1_address0;

assign x2_1_address1 = 1'd0;

assign x2_1_ce0 = svm_U0_x_1_ce0;

assign x2_1_ce1 = 1'b0;

assign x2_1_d0 = 32'd0;

assign x2_1_d1 = 32'd0;

assign x2_1_we0 = 1'b0;

assign x2_1_we1 = 1'b0;

assign x2_2_address0 = svm_U0_x_2_address0;

assign x2_2_address1 = 1'd0;

assign x2_2_ce0 = svm_U0_x_2_ce0;

assign x2_2_ce1 = 1'b0;

assign x2_2_d0 = 32'd0;

assign x2_2_d1 = 32'd0;

assign x2_2_we0 = 1'b0;

assign x2_2_we1 = 1'b0;

assign x2_3_address0 = svm_U0_x_3_address0;

assign x2_3_address1 = 1'd0;

assign x2_3_ce0 = svm_U0_x_3_ce0;

assign x2_3_ce1 = 1'b0;

assign x2_3_d0 = 32'd0;

assign x2_3_d1 = 32'd0;

assign x2_3_we0 = 1'b0;

assign x2_3_we1 = 1'b0;

assign x2_4_address0 = svm_U0_x_4_address0;

assign x2_4_address1 = 1'd0;

assign x2_4_ce0 = svm_U0_x_4_ce0;

assign x2_4_ce1 = 1'b0;

assign x2_4_d0 = 32'd0;

assign x2_4_d1 = 32'd0;

assign x2_4_we0 = 1'b0;

assign x2_4_we1 = 1'b0;

assign x2_5_address0 = svm_U0_x_5_address0;

assign x2_5_address1 = 1'd0;

assign x2_5_ce0 = svm_U0_x_5_ce0;

assign x2_5_ce1 = 1'b0;

assign x2_5_d0 = 32'd0;

assign x2_5_d1 = 32'd0;

assign x2_5_we0 = 1'b0;

assign x2_5_we1 = 1'b0;

assign x2_6_address0 = svm_U0_x_6_address0;

assign x2_6_address1 = 1'd0;

assign x2_6_ce0 = svm_U0_x_6_ce0;

assign x2_6_ce1 = 1'b0;

assign x2_6_d0 = 32'd0;

assign x2_6_d1 = 32'd0;

assign x2_6_we0 = 1'b0;

assign x2_6_we1 = 1'b0;

assign x2_7_address0 = svm_U0_x_7_address0;

assign x2_7_address1 = 1'd0;

assign x2_7_ce0 = svm_U0_x_7_ce0;

assign x2_7_ce1 = 1'b0;

assign x2_7_d0 = 32'd0;

assign x2_7_d1 = 32'd0;

assign x2_7_we0 = 1'b0;

assign x2_7_we1 = 1'b0;

assign x2_8_address0 = svm_U0_x_8_address0;

assign x2_8_address1 = 1'd0;

assign x2_8_ce0 = svm_U0_x_8_ce0;

assign x2_8_ce1 = 1'b0;

assign x2_8_d0 = 32'd0;

assign x2_8_d1 = 32'd0;

assign x2_8_we0 = 1'b0;

assign x2_8_we1 = 1'b0;

endmodule //svm_top
