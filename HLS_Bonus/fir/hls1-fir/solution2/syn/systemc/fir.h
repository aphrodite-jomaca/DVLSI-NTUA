// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fir_HH_
#define _fir_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct fir : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<19> > y;
    sc_out< sc_logic > y_ap_vld;
    sc_in< sc_lv<8> > x;


    // Module declarations
    fir(sc_module_name name);
    SC_HAS_PROCESS(fir);

    ~fir();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > shift_reg_6;
    sc_signal< sc_lv<8> > shift_reg_5;
    sc_signal< sc_lv<8> > shift_reg_4;
    sc_signal< sc_lv<8> > shift_reg_3;
    sc_signal< sc_lv<8> > shift_reg_2;
    sc_signal< sc_lv<8> > shift_reg_1;
    sc_signal< sc_lv<8> > shift_reg_0;
    sc_signal< sc_lv<14> > acc5_fu_229_p2;
    sc_signal< sc_lv<14> > acc5_reg_333;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > p_shl4_fu_79_p3;
    sc_signal< sc_lv<12> > p_shl4_cast_fu_87_p1;
    sc_signal< sc_lv<12> > tmp_2_fu_75_p1;
    sc_signal< sc_lv<11> > acc1_fu_57_p3;
    sc_signal< sc_lv<12> > mul_fu_91_p2;
    sc_signal< sc_lv<13> > tmp_5_fu_101_p1;
    sc_signal< sc_lv<13> > tmp_4_fu_97_p1;
    sc_signal< sc_lv<11> > p_shl2_fu_121_p3;
    sc_signal< sc_lv<9> > p_shl3_fu_133_p3;
    sc_signal< sc_lv<12> > p_shl2_cast_fu_129_p1;
    sc_signal< sc_lv<12> > p_shl3_cast_fu_141_p1;
    sc_signal< sc_lv<13> > acc2_fu_105_p2;
    sc_signal< sc_lv<12> > mul_1_fu_145_p2;
    sc_signal< sc_lv<14> > tmp_s_fu_155_p1;
    sc_signal< sc_lv<14> > tmp_9_fu_151_p1;
    sc_signal< sc_lv<10> > p_shl1_fu_179_p3;
    sc_signal< sc_lv<11> > tmp_1_cast2_fu_175_p1;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_187_p1;
    sc_signal< sc_lv<11> > mul_2_fu_191_p2;
    sc_signal< sc_lv<14> > tmp_6_cast_fu_197_p1;
    sc_signal< sc_lv<14> > acc3_fu_159_p2;
    sc_signal< sc_lv<10> > mul_3_fu_217_p3;
    sc_signal< sc_lv<14> > tmp_11_cast_fu_225_p1;
    sc_signal< sc_lv<14> > acc4_fu_201_p2;
    sc_signal< sc_lv<10> > p_shl_fu_249_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_257_p1;
    sc_signal< sc_lv<11> > tmp_12_cast1_fu_245_p1;
    sc_signal< sc_lv<11> > mul_4_fu_261_p2;
    sc_signal< sc_lv<12> > mul_4_cast_fu_267_p1;
    sc_signal< sc_lv<15> > tmp_14_cast_fu_274_p1;
    sc_signal< sc_lv<15> > tmp_13_cast_fu_271_p1;
    sc_signal< sc_lv<9> > mul_5_fu_294_p3;
    sc_signal< sc_lv<15> > tmp_17_cast_fu_302_p1;
    sc_signal< sc_lv<15> > acc6_fu_278_p2;
    sc_signal< sc_lv<15> > tmp_19_cast_fu_318_p1;
    sc_signal< sc_lv<15> > acc7_fu_306_p2;
    sc_signal< sc_lv<15> > acc8_fu_322_p2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc1_fu_57_p3();
    void thread_acc2_fu_105_p2();
    void thread_acc3_fu_159_p2();
    void thread_acc4_fu_201_p2();
    void thread_acc5_fu_229_p2();
    void thread_acc6_fu_278_p2();
    void thread_acc7_fu_306_p2();
    void thread_acc8_fu_322_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_mul_1_fu_145_p2();
    void thread_mul_2_fu_191_p2();
    void thread_mul_3_fu_217_p3();
    void thread_mul_4_cast_fu_267_p1();
    void thread_mul_4_fu_261_p2();
    void thread_mul_5_fu_294_p3();
    void thread_mul_fu_91_p2();
    void thread_p_shl1_cast_fu_187_p1();
    void thread_p_shl1_fu_179_p3();
    void thread_p_shl2_cast_fu_129_p1();
    void thread_p_shl2_fu_121_p3();
    void thread_p_shl3_cast_fu_141_p1();
    void thread_p_shl3_fu_133_p3();
    void thread_p_shl4_cast_fu_87_p1();
    void thread_p_shl4_fu_79_p3();
    void thread_p_shl_cast_fu_257_p1();
    void thread_p_shl_fu_249_p3();
    void thread_tmp_11_cast_fu_225_p1();
    void thread_tmp_12_cast1_fu_245_p1();
    void thread_tmp_13_cast_fu_271_p1();
    void thread_tmp_14_cast_fu_274_p1();
    void thread_tmp_17_cast_fu_302_p1();
    void thread_tmp_19_cast_fu_318_p1();
    void thread_tmp_1_cast2_fu_175_p1();
    void thread_tmp_2_fu_75_p1();
    void thread_tmp_4_fu_97_p1();
    void thread_tmp_5_fu_101_p1();
    void thread_tmp_6_cast_fu_197_p1();
    void thread_tmp_9_fu_151_p1();
    void thread_tmp_s_fu_155_p1();
    void thread_y();
    void thread_y_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
