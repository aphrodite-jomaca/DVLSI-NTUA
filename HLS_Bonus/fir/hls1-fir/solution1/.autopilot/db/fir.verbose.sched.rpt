

================================================================
== Vivado HLS Report for 'fir'
================================================================
* Date:           Mon Jun 14 14:13:46 2021

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        hls1-fir
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.510|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   41|   41|   41|   41|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                    |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Shift_Accum_Loop  |   40|   40|         5|          -|          -|     8|    no    |
        +--------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	2  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %y) nounwind, !map !7"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %x) nounwind, !map !13"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @fir_str) nounwind"   --->   Operation 9 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%x_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %x) nounwind"   --->   Operation 10 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.76ns)   --->   "br label %1" [fir.c:58]   --->   Operation 11 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 4.05>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%acc = phi i32 [ 0, %0 ], [ %acc_1, %5 ]"   --->   Operation 12 'phi' 'acc' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%i = phi i4 [ 7, %0 ], [ %i_1, %5 ]"   --->   Operation 13 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%i_cast = sext i4 %i to i32" [fir.c:58]   --->   Operation 14 'sext' 'i_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %i, i32 3)" [fir.c:58]   --->   Operation 15 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind"   --->   Operation 16 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "br i1 %tmp, label %6, label %2" [fir.c:58]   --->   Operation 17 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str) nounwind" [fir.c:58]   --->   Operation 18 'specloopname' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (1.30ns)   --->   "%tmp_1 = icmp eq i4 %i, 0" [fir.c:59]   --->   Operation 19 'icmp' 'tmp_1' <Predicate = (!tmp)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %3, label %4" [fir.c:59]   --->   Operation 20 'br' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.73ns)   --->   "%tmp_2 = add i4 %i, -1" [fir.c:63]   --->   Operation 21 'add' 'tmp_2' <Predicate = (!tmp & !tmp_1)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_3 = zext i4 %tmp_2 to i64" [fir.c:63]   --->   Operation 22 'zext' 'tmp_3' <Predicate = (!tmp & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%shift_reg_addr = getelementptr inbounds [8 x i32]* @shift_reg, i64 0, i64 %tmp_3" [fir.c:63]   --->   Operation 23 'getelementptr' 'shift_reg_addr' <Predicate = (!tmp & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 24 [2/2] (2.32ns)   --->   "%data = load i32* %shift_reg_addr, align 4" [fir.c:63]   --->   Operation 24 'load' 'data' <Predicate = (!tmp & !tmp_1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 25 [1/1] (2.32ns)   --->   "store i32 %x_read, i32* getelementptr inbounds ([8 x i32]* @shift_reg, i64 0, i64 0), align 16" [fir.c:60]   --->   Operation 25 'store' <Predicate = (!tmp & tmp_1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 26 [1/1] (1.76ns)   --->   "br label %5" [fir.c:62]   --->   Operation 26 'br' <Predicate = (!tmp & tmp_1)> <Delay = 1.76>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %y, i32 %acc) nounwind" [fir.c:68]   --->   Operation 27 'write' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "ret void" [fir.c:69]   --->   Operation 28 'ret' <Predicate = (tmp)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 4.64>
ST_3 : Operation 29 [1/2] (2.32ns)   --->   "%data = load i32* %shift_reg_addr, align 4" [fir.c:63]   --->   Operation 29 'load' 'data' <Predicate = (!tmp_1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_4 = zext i32 %i_cast to i64" [fir.c:63]   --->   Operation 30 'zext' 'tmp_4' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%shift_reg_addr_1 = getelementptr inbounds [8 x i32]* @shift_reg, i64 0, i64 %tmp_4" [fir.c:63]   --->   Operation 31 'getelementptr' 'shift_reg_addr_1' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (2.32ns)   --->   "store i32 %data, i32* %shift_reg_addr_1, align 4" [fir.c:63]   --->   Operation 32 'store' <Predicate = (!tmp_1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 33 [1/1] (1.76ns)   --->   "br label %5"   --->   Operation 33 'br' <Predicate = (!tmp_1)> <Delay = 1.76>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_5 = zext i32 %i_cast to i64" [fir.c:66]   --->   Operation 34 'zext' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%c1_addr = getelementptr [8 x i4]* @c1, i64 0, i64 %tmp_5" [fir.c:66]   --->   Operation 35 'getelementptr' 'c1_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [2/2] (3.25ns)   --->   "%c1_load = load i4* %c1_addr, align 1" [fir.c:66]   --->   Operation 36 'load' 'c1_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 8> <ROM>
ST_3 : Operation 37 [1/1] (1.73ns)   --->   "%i_1 = add i4 %i, -1" [fir.c:58]   --->   Operation 37 'add' 'i_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%data1 = phi i32 [ %x_read, %3 ], [ %data, %4 ]"   --->   Operation 38 'phi' 'data1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/2] (3.25ns)   --->   "%c1_load = load i4* %c1_addr, align 1" [fir.c:66]   --->   Operation 39 'load' 'c1_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 8> <ROM>

State 5 <SV = 4> <Delay = 8.51>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%c1_load_cast = zext i4 %c1_load to i32" [fir.c:66]   --->   Operation 40 'zext' 'c1_load_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (8.51ns)   --->   "%tmp_6 = mul nsw i32 %c1_load_cast, %data1" [fir.c:66]   --->   Operation 41 'mul' 'tmp_6' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 2.55>
ST_6 : Operation 42 [1/1] (2.55ns)   --->   "%acc_1 = add nsw i32 %tmp_6, %acc" [fir.c:66]   --->   Operation 42 'add' 'acc_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 43 [1/1] (0.00ns)   --->   "br label %1" [fir.c:58]   --->   Operation 43 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('acc') with incoming values : ('acc', fir.c:66) [11]  (1.77 ns)

 <State 2>: 4.06ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', fir.c:58) [12]  (0 ns)
	'add' operation ('tmp_2', fir.c:63) [22]  (1.74 ns)
	'getelementptr' operation ('shift_reg_addr', fir.c:63) [24]  (0 ns)
	'load' operation ('data', fir.c:63) on array 'shift_reg' [25]  (2.32 ns)

 <State 3>: 4.64ns
The critical path consists of the following:
	'load' operation ('data', fir.c:63) on array 'shift_reg' [25]  (2.32 ns)
	'store' operation (fir.c:63) of variable 'data', fir.c:63 on array 'shift_reg' [28]  (2.32 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'load' operation ('c1_load', fir.c:66) on array 'c1' [37]  (3.25 ns)

 <State 5>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_6', fir.c:66) [39]  (8.51 ns)

 <State 6>: 2.55ns
The critical path consists of the following:
	'add' operation ('acc', fir.c:66) [40]  (2.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
